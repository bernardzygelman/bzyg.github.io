(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    196166,       4057]
NotebookOptionsPosition[    143895,       3117]
NotebookOutlinePosition[    190225,       3972]
CellTagsIndexPosition[    190182,       3969]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Note: This Notebook requires download of the Wolfram Quantum Frame work (see \
https://www.wolfram.com/quantum-computation-framework/index.php.en )\
\>", "Text",
 CellChangeTimes->{{3.9450860529268723`*^9, 3.9450860851600857`*^9}, {
  3.945086123549354*^9, 
  3.945086132184428*^9}},ExpressionUUID->"e115ea0e-167c-4426-a023-\
e75827db23c6"],

Cell[CellGroupData[{

Cell["Why Superposition ?", "Title",
 CellChangeTimes->{{3.945014894028524*^9, 3.945014907771256*^9}, {
  3.945015009195283*^9, 
  3.945015009753996*^9}},ExpressionUUID->"06f60776-950a-48f2-9995-\
d0b6fee2da72"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"PacletInstall", "[", "\"\<Wolfram/QuantumFramework\>\"", 
  "]"}], "\n", 
 RowBox[{"Needs", "[", "\"\<Wolfram`QuantumFramework`\>\"", "]"}]}], "Input",
 CellChangeTimes->{
  3.902234900383233*^9, {3.914086720610918*^9, 3.9140867247168694`*^9}, {
   3.914086764343657*^9, 3.914086768227372*^9}, {3.9450150207662497`*^9, 
   3.945015029929001*^9}, {3.945080856002788*^9, 3.945080860049856*^9}, {
   3.9450812334149437`*^9, 3.945081237789486*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ea3280f8-f77c-4165-9907-8e0338ba9bd7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PacletObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Wolfram/QuantumFramework\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.4.9\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Wolfram/QuantumFramework\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.4.9\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/bernard/Library/Wolfram/Paclets/Repository/Wolfram_\
_QuantumFramework-1.4.9\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                  "\"Perform analytic and numeric quantum computations\"", 
                   Short], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PacletObject[<|
   "Name" -> "Wolfram/QuantumFramework", "Description" -> 
    "Perform analytic and numeric quantum computations", "Creator" -> 
    "Wolfram Research, Quantum Computation Framework team", "License" -> 
    "MIT", "PublisherID" -> "Wolfram", "Version" -> "1.4.9", "WolframVersion" -> 
    "13.1+", "PrimaryContext" -> "Wolfram`QuantumFramework`", 
    "Extensions" -> {{
      "Kernel", "Root" -> "Kernel", 
       "Context" -> {
        "Wolfram`QuantumFrameworkLoader`", {
         "Wolfram`QuantumFramework`", "QuantumFrameworkMain.m"}, 
         "Wolfram`QuantumFramework`Experimental`", 
         "Wolfram`QuantumFramework`ExampleRepository`", 
         "Wolfram`QuantumFramework`DiagramPlot`", 
         "Wolfram`QuantumFramework`SecondQuantization`", 
         "Wolfram`QuantumFramework`QuantumOptimization`"}, 
       "Symbols" -> {
        "Wolfram`QuantumFramework`QuditName", 
         "Wolfram`QuantumFramework`QuditBasis", 
         "Wolfram`QuantumFramework`QuantumBasis", 
         "Wolfram`QuantumFramework`QuantumState", 
         "Wolfram`QuantumFramework`QuantumOperator", 
         "Wolfram`QuantumFramework`QuantumMeasurementOperator", 
         "Wolfram`QuantumFramework`QuantumCircuitOperator", 
         "Wolfram`QuantumFramework`QuantumMeasurement", 
         "Wolfram`QuantumFramework`QuantumTensorProduct", 
         "Wolfram`QuantumFramework`QuantumPartialTrace", 
         "Wolfram`QuantumFramework`QuantumDistance", 
         "Wolfram`QuantumFramework`QuantumSimilarity", 
         "Wolfram`QuantumFramework`QuantumEntanglementMonotone", 
         "Wolfram`QuantumFramework`QuantumEntangledQ", 
         "Wolfram`QuantumFramework`QuantumWignerTransform", 
         "Wolfram`QuantumFramework`QuantumPhaseSpaceTransform", 
         "Wolfram`QuantumFramework`QuantumChannel", 
         "Wolfram`QuantumFramework`QuantumStateEstimate", 
         "Wolfram`QuantumFramework`QuantumMeasurementSimulation", 
         "Wolfram`QuantumFramework`QuantumEvolve"}}, {
      "Documentation", "Language" -> "English"}, {
      "AutoCompletionData", "Root" -> "AutoCompletionData"}, {"FrontEnd"}, {
      "Asset", "Root" -> "Assets", 
       "Assets" -> {{"IBMQ.paclet", "ServiceConnection_IBMQ-0.0.4.paclet"}, {
         "Cotengra.paclet", "Cotengra-0.1.paclet"}}}}, "Location" -> 
    "/Users/bernard/Library/Wolfram/Paclets/Repository/Wolfram__\
QuantumFramework-1.4.9"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9450824052122927`*^9, 3.945082597212051*^9, 
  3.945086392089864*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"92864332-c73f-4da7-bd59-148f4714738d"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ket0", "=", 
   RowBox[{"QuantumState", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ket1", "=", 
   RowBox[{"QuantumState", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u2", "[", "\[Theta]_", "]"}], "=", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
        RowBox[{"-", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gate0", "=", 
   RowBox[{"QuantumOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gate1", "=", 
   RowBox[{"QuantumOperator", "[", 
    RowBox[{"u2", "[", 
     RowBox[{"Pi", "/", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gate2", "=", 
   RowBox[{"QuantumOperator", "[", 
    RowBox[{"u2", "[", 
     RowBox[{
      RowBox[{"Pi", "/", "2"}], "+", "0.15"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gate3", "=", 
   RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m1", "=", 
   RowBox[{"QuantumMeasurementOperator", "[", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.902159349881194*^9, 3.902159410649467*^9}, {
   3.902159545572278*^9, 3.902159564348279*^9}, {3.902160092065402*^9, 
   3.90216009874614*^9}, {3.902160134714418*^9, 3.902160137640456*^9}, {
   3.902160195690303*^9, 3.902160210203946*^9}, {3.902160269593433*^9, 
   3.902160280022675*^9}, {3.9021782602042837`*^9, 3.902178290844994*^9}, {
   3.9021783222297277`*^9, 3.9021783235341578`*^9}, {3.902178418706346*^9, 
   3.9021785843315973`*^9}, {3.9021787724763613`*^9, 3.902178820501935*^9}, {
   3.902178852890966*^9, 3.9021788556115627`*^9}, {3.902178887293679*^9, 
   3.902179000039415*^9}, {3.902180489889827*^9, 3.902180619510532*^9}, {
   3.902180714531172*^9, 3.902180718592639*^9}, {3.9021809027484503`*^9, 
   3.902180902966918*^9}, {3.902180938916544*^9, 3.902181050254599*^9}, {
   3.902181267077065*^9, 3.902181363289144*^9}, {3.902181480908724*^9, 
   3.902181560232634*^9}, {3.9021816140104647`*^9, 3.902181626554793*^9}, {
   3.902182023898634*^9, 3.902182031962432*^9}, {3.902182090666836*^9, 
   3.9021821717306023`*^9}, {3.9021822066172247`*^9, 
   3.9021822546212378`*^9}, {3.902182284949278*^9, 3.9021823235372887`*^9}, {
   3.902182444388006*^9, 3.902182460587462*^9}, {3.902182497431952*^9, 
   3.902182497971244*^9}, {3.9021825899316597`*^9, 3.902182600514612*^9}, {
   3.9021829258620377`*^9, 3.902183005420765*^9}, {3.902183038722582*^9, 
   3.902183046889258*^9}, {3.902183146095436*^9, 3.902183180909424*^9}, {
   3.9021832196542*^9, 3.9021832663767*^9}, 3.9021834227737217`*^9, {
   3.902184008376007*^9, 3.9021841009593287`*^9}, {3.902185056875433*^9, 
   3.902185063647262*^9}, {3.9021851127874317`*^9, 3.9021851392227507`*^9}, {
   3.902185198925695*^9, 3.902185286372054*^9}, {3.902229369959395*^9, 
   3.902229405874107*^9}, {3.9022295399357347`*^9, 3.902229555835684*^9}, {
   3.90223044228968*^9, 3.902230496834584*^9}, 3.9022305356680937`*^9, {
   3.902230822550284*^9, 3.902230823581956*^9}, {3.902230881644936*^9, 
   3.902230887764627*^9}, {3.902232471989459*^9, 3.9022324764832983`*^9}, {
   3.945011832781304*^9, 3.9450118455872726`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"f9372026-a71b-4a1b-81ad-16d6b6e9a953"],

Cell[TextData[StyleBox["Above we defined a set of one qubit gates, that we \
labeled gate0,gate1,gate2,gate3. Our goal is to run these gates in a simple \
circuit shown in the diagram below.",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.9450065627273817`*^9, 3.945006655795589*^9}, 
   3.9450067454812613`*^9, {3.94500959644005*^9, 3.945009610043886*^9}, {
   3.945011942575448*^9, 3.9450119442229013`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"9f0d4c3a-50a3-43d3-8616-42a055d45b5d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"circuit", "=", 
  RowBox[{"QuantumCircuitOperator", "[", 
   RowBox[{"{", "gate0", "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"circuitdiagram", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"gate0", ",", "m1"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"circuitdiagram", "[", "\"\<Diagram\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.902159349881194*^9, 3.902159410649467*^9}, {
   3.902159545572278*^9, 3.902159564348279*^9}, {3.902160092065402*^9, 
   3.90216009874614*^9}, {3.902160134714418*^9, 3.902160137640456*^9}, {
   3.902160195690303*^9, 3.902160210203946*^9}, {3.902160269593433*^9, 
   3.902160280022675*^9}, {3.9021782602042837`*^9, 3.902178290844994*^9}, {
   3.9021783222297277`*^9, 3.9021783235341578`*^9}, {3.902178418706346*^9, 
   3.9021785843315973`*^9}, {3.9021787724763613`*^9, 3.902178820501935*^9}, {
   3.902178852890966*^9, 3.9021788556115627`*^9}, {3.902178887293679*^9, 
   3.902179000039415*^9}, {3.902180489889827*^9, 3.902180619510532*^9}, {
   3.902180714531172*^9, 3.902180718592639*^9}, {3.9021809027484503`*^9, 
   3.902180902966918*^9}, {3.902180938916544*^9, 3.902181050254599*^9}, {
   3.902181267077065*^9, 3.902181363289144*^9}, {3.902181480908724*^9, 
   3.902181560232634*^9}, {3.9021816140104647`*^9, 3.902181626554793*^9}, {
   3.902182023898634*^9, 3.902182031962432*^9}, {3.902182090666836*^9, 
   3.9021821717306023`*^9}, {3.9021822066172247`*^9, 
   3.9021822546212378`*^9}, {3.902182284949278*^9, 3.9021823235372887`*^9}, {
   3.902182444388006*^9, 3.902182460587462*^9}, {3.902182497431952*^9, 
   3.902182497971244*^9}, {3.9021825899316597`*^9, 3.902182600514612*^9}, {
   3.9021829258620377`*^9, 3.902183005420765*^9}, {3.902183038722582*^9, 
   3.902183046889258*^9}, {3.902183146095436*^9, 3.902183180909424*^9}, {
   3.9021832196542*^9, 3.9021832663767*^9}, 3.9021834227737217`*^9, {
   3.902184008376007*^9, 3.9021841009593287`*^9}, {3.902185056875433*^9, 
   3.902185063647262*^9}, {3.9021851127874317`*^9, 3.9021851392227507`*^9}, {
   3.902185198925695*^9, 3.902185286372054*^9}, {3.902229369959395*^9, 
   3.902229405874107*^9}, {3.9022295399357347`*^9, 3.902229555835684*^9}, {
   3.90223044228968*^9, 3.902230496834584*^9}, 3.9022305356680937`*^9, {
   3.902230822550284*^9, 3.902230823581956*^9}, {3.902230881644936*^9, 
   3.902230887764627*^9}, {3.902232471989459*^9, 3.9022324764832983`*^9}, {
   3.9450085514997387`*^9, 3.945008551874647*^9}, {3.945008594208477*^9, 
   3.9450085943996763`*^9}, {3.945009002943652*^9, 3.945009006508718*^9}, {
   3.945081375849352*^9, 3.9450814585892973`*^9}, {3.945082476123197*^9, 
   3.945082526379402*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"0a335fc0-d1f6-4dbe-b612-de04d6033a18"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumCircuitOperator",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{{
                  Directive[
                   CapForm[None], 
                   RGBColor[0.537254, 0.537254, 0.537254], 
                   Opacity[0.3]], {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{0.375, -1}, {0.625, -1}}]}}, {
                  Directive[
                   CapForm[None], 
                   RGBColor[0.537254, 0.537254, 0.537254], 
                   Opacity[0.3]], {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{1.375, -1}, {1.625, -1}}]}}}, {
                 TagBox[
                  TooltipBox[{
                    EdgeForm[
                    RGBColor[0.537254, 0.537254, 0.537254]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.0313725, 0.027451, 0.027451], 
                    Opacity[0.25]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, 
                    RoundingRadius -> 0.1]}, 
                   SubscriptBox["\"U\"", "1"]], Annotation[#, 
                   Subscript["U", 1], "Tooltip"]& ]}, {}}, {
               ImageSize -> Tiny}], "None"], 
             Annotation[#, None, "Tooltip"]& ], 
            InterpretationBox[
             TagBox[
              
              GridBox[{{""}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
             
             Grid[{{}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              Alignment -> {Left, Automatic}, Spacings -> {2, Automatic}]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{{
                  Directive[
                   CapForm[None], 
                   RGBColor[0.537254, 0.537254, 0.537254], 
                   Opacity[0.3]], {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{0.375, -1}, {0.625, -1}}]}}, {
                  Directive[
                   CapForm[None], 
                   RGBColor[0.537254, 0.537254, 0.537254], 
                   Opacity[0.3]], {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{1.375, -1}, {1.625, -1}}]}}}, {
                 TagBox[
                  TooltipBox[{
                    EdgeForm[
                    RGBColor[0.537254, 0.537254, 0.537254]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.0313725, 0.027451, 0.027451], 
                    Opacity[0.25]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, 
                    RoundingRadius -> 0.1]}, 
                   SubscriptBox["\"U\"", "1"]], Annotation[#, 
                   Subscript["U", 1], "Tooltip"]& ]}, {}}, {
               ImageSize -> Tiny}], "None"], 
             Annotation[#, None, "Tooltip"]& ], 
            GridBox[{{""}, {
               RowBox[{
                 TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Depth: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Width: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "1", "}"}], "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "2", "}"}], "\[Rule]", 
                    RowBox[{"{", "2", "}"}]}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Measurement Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
       SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 1}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schrodinger", "Label" -> None, 
          "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> None|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.945082408927319*^9, 3.945082597349092*^9, 
  3.9450863954506607`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"0b166611-b3be-4000-b93d-97b899fe6832"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -1}, {1.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{0.375, -1}, {0.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
     LineBox[{{0.375, -0.0234375}, {2.625, -0.0234375}}], 
     LineBox[{{0.375, 0.0234375}, {2.625, 0.0234375}}]}, InsetBox[
     StyleBox["\<\"c\"\>",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, 0}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}, {
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.0313725, 0.027451, 0.027451], Opacity[0.25]}], 
       RectangleBox[{0.625, -1.375}, {1.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          SubscriptBox["\<\"U\"\>", "1"],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      SubscriptBox["\"U\"", "1"]],
     Annotation[#, 
      Subscript["U", 1], "Tooltip"]& ], {
     TagBox[
      TooltipBox[{
        TagBox[
         TooltipBox[{
           TagBox[
            TooltipBox[
             {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
              0.7367, 0.358, 0.503], Opacity[0.3]}], 
              RectangleBox[{1.625, -1.375}, {2.375, -0.625},
               RoundingRadius->0.1]},
             "\"Measurement\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Measurement", "Tooltip"]& ], {
            {Thickness[Small], 
             LineBox[{{2.1516906864453027`, -1.0772902651951612`}, {
              2.212366961023424, -1.0332063712732258`}}], 
             LineBox[{{2.1169043378485126`, -1.0409065970372444`}, {
              2.1636660729879176`, -0.9822692358521422}}], 
             LineBox[{{2.073692193435111, -1.015088542646603}, {
              2.103169070809155, -0.9461239597052442}}], 
             LineBox[{{2.0251687373408105`, -1.0016969196685124`}, {
              2.0352362322771347`, -0.9273756875359171}}], 
             LineBox[{{1.9748312626591897`, -1.0016969196685122`}, {
              1.9647637677228655`, -0.9273756875359171}}], 
             LineBox[{{1.9263078065648893`, -1.015088542646603}, {
              1.8968309291908452`, -0.9461239597052442}}], 
             LineBox[{{1.8830956621514874`, -1.0409065970372444`}, {
              1.8363339270120824`, -0.9822692358521422}}], 
             LineBox[{{1.8483093135546973`, -1.0772902651951612`}, {
              1.7876330389765764`, -1.0332063712732258`}}]}, 
            {Thickness[Medium], 
             LineBox[{{2, -1.1875}, {
               2.17024643740233, -0.853372553429362}}]}}, 
           {Dashing[{Small, Small}]}},
          RowBox[{"\"Measurement\"", "[", "None", "]"}]],
         Annotation[#, 
          "Measurement"[None], "Tooltip"]& ], 
        {Dashing[{Small, Small}]}},
       TemplateBox[{
         RowBox[{"\"Measurement\"", "[", "None", "]"}], 
         RowBox[{"\[CircleTimes]", "1"}]}, "Superscript", SyntaxForm -> 
        SuperscriptBox]],
      Annotation[#, 
       Superscript[
        "Measurement"[None], 
        CircleTimes[1]], "Tooltip"]& ], 
     {RGBColor[0.537254, 0.537254, 0.537254], 
      LineBox[{{2., -0.625}, {2., -0.2109375}}], 
      {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
       FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
       PolygonBox[{{1.90625, -0.2109375}, {2.09375, -0.2109375}, {
        2., -0.0234375}}]}}}}, InsetBox[
    StyleBox["1",
     StripOnInput->False,
     FontSize->10,
     FontSlant->Italic,
     FontColor->RGBColor[0.537254, 0.537254, 0.537254],
     Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
    ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{3.945082408927319*^9, 3.945082597349092*^9, 
  3.945086395543108*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"df0d51de-2610-4714-94fe-abcb334d05af"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Here we consider the circuit containing \
\[OpenCurlyDoubleQuote]gate0\[CloseCurlyDoubleQuote] defined above.\nIn this \
diagram, the input lead to the left of the box labeled ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   SubscriptBox["U", "1"], TraditionalForm]],
  FontSize->18,ExpressionUUID->"5fabf9f4-0012-49ff-83b2-1fe6947f39a4"],
 "  (\[OpenCurlyDoubleQuote]gate0\[CloseCurlyDoubleQuote])",
 StyleBox[" represents one of the states |0\[RightAngleBracket] or |1\
\[RightAngleBracket]. The box containing the meter is a measurement gate. Its \
output can only display one of the binary values 0 or 1. Values indicated by \
the meter is probabilistically determined by the output quantum state from \
gate ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   SubscriptBox["U", "1"], TraditionalForm]],ExpressionUUID->
  "523c5bcf-ef76-4eb8-9880-37c25b6d6250"],
 StyleBox[" and the Born rule. We will uncover the properties of gate ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   SubscriptBox["U", "1"], TraditionalForm]],ExpressionUUID->
  "3757dee4-19dc-4e38-a2d6-45a2269a5785"],
 " ",
 StyleBox["by feeding states |0\[RightAngleBracket] or |1\[RightAngleBracket] \
into it and analyzing output statistics of the measurement gate. In the first \
run we are using the gate labeled \[OpenCurlyDoubleQuote]gate0\
\[CloseCurlyDoubleQuote].",
  FontSize->18]
}], "Text",
 CellChangeTimes->{{3.9450066998519363`*^9, 3.9450067271809483`*^9}, {
  3.945006887862228*^9, 3.945007045884275*^9}, {3.945007121726417*^9, 
  3.945007135540807*^9}, {3.94500716840765*^9, 3.9450073050178127`*^9}, {
  3.94500737584619*^9, 3.9450076457511578`*^9}, {3.945007681904051*^9, 
  3.945007747841889*^9}, {3.9450078552504807`*^9, 3.945007888644484*^9}, {
  3.945008289289871*^9, 3.945008355633748*^9}, {3.9450096282838783`*^9, 
  3.94500976952455*^9}, {3.945013380835188*^9, 3.945013472754706*^9}, {
  3.945013741006222*^9, 3.9450137698851757`*^9}, {3.945013834252735*^9, 
  3.945013855468378*^9}, {3.9450139184026337`*^9, 3.945013923740082*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"bef06701-5b2c-4628-9072-95f6c751d4a8"],

Cell["\<\
Let\[CloseCurlyQuote]s run the above computation several times and take \
statistics of output values.\
\>", "Text",
 CellChangeTimes->{{3.902229759336257*^9, 3.9022297829364433`*^9}, {
  3.9022313615073977`*^9, 
  3.9022314061157093`*^9}},ExpressionUUID->"072a870f-7529-4079-95a7-\
06b3323b3f13"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.902160669187504*^9, {3.902160755058207*^9, 3.9021608403648376`*^9}, {
   3.902160883386451*^9, 3.902160886693926*^9}, {3.902160932177886*^9, 
   3.902160963272201*^9}, {3.9021609985857887`*^9, 3.902161001455246*^9}, {
   3.902161154299004*^9, 3.902161155309304*^9}, {3.902161213958499*^9, 
   3.9021612244081287`*^9}, {3.902161706709229*^9, 3.9021617552752123`*^9}, {
   3.902161829053338*^9, 3.902161874799492*^9}, {3.9021619319637413`*^9, 
   3.902161933244416*^9}, {3.9021619635538588`*^9, 3.902161966050132*^9}, {
   3.9021620636337137`*^9, 3.902162065476829*^9}, {3.902162109262967*^9, 
   3.9021621384867697`*^9}, {3.9021622913346567`*^9, 3.902162346241014*^9}, {
   3.902162419580595*^9, 3.9021624257770967`*^9}, {3.902162476044937*^9, 
   3.90216258673118*^9}, {3.9021819778752213`*^9, 3.902181988680463*^9}, {
   3.902182333495875*^9, 3.9021823463986797`*^9}, 3.902182391711767*^9, {
   3.902182422519552*^9, 3.9021824755880213`*^9}, 3.902182515668507*^9, {
   3.902182552129517*^9, 3.902182552509975*^9}, {3.902182666517251*^9, 
   3.902182682209094*^9}, {3.90218271910001*^9, 3.902182719403943*^9}, {
   3.9021833080662518`*^9, 3.902183320509087*^9}, {3.902183383914641*^9, 
   3.902183405477783*^9}, {3.9022294993146467`*^9, 3.902229505963492*^9}, {
   3.902229579989684*^9, 3.902229613491081*^9}, {3.9022296480820208`*^9, 
   3.9022296516414957`*^9}, {3.9022297459135323`*^9, 
   3.9022297509938374`*^9}, {3.90223010190806*^9, 3.9022301506237717`*^9}, {
   3.902230329710114*^9, 3.902230352515791*^9}, {3.902231461932437*^9, 
   3.902231463549939*^9}, {3.902232850828144*^9, 3.902232853121435*^9}, 
   3.9022337633525667`*^9, {3.914891615230335*^9, 3.91489162630768*^9}, {
   3.91489189304036*^9, 3.914891894350165*^9}, {3.9148919778646927`*^9, 
   3.914892082611939*^9}, {3.914892116595964*^9, 3.914892140823224*^9}, {
   3.914892265273246*^9, 3.914892268866791*^9}, {3.9148924138403*^9, 
   3.9148924142585697`*^9}, {3.915102483001464*^9, 3.915102501146542*^9}, {
   3.9151038218180103`*^9, 3.915103838321212*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"5502e661-35e2-465a-a0b9-c3176314a198"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputstate", "=", "ket1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Input state   \>\"", ",", 
   RowBox[{"inputstate", "[", "\"\<Formula\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"runs", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qm", "=", 
   RowBox[{"QuantumMeasurementSimulation", "[", 
    RowBox[{
     RowBox[{"circuit", "[", "inputstate", "]"}], ",", 
     RowBox[{"QuantumMeasurementOperator", " ", "/@", 
      RowBox[{"{", "\"\<Z\>\"", "}"}]}], ",", "runs"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"qm", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ChartLabels", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Output Values\>\"", ",", "\"\<Counts\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Bold"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.902160669187504*^9, {3.902160755058207*^9, 3.9021608403648376`*^9}, {
   3.902160883386451*^9, 3.902160886693926*^9}, {3.902160932177886*^9, 
   3.902160963272201*^9}, {3.9021609985857887`*^9, 3.902161001455246*^9}, {
   3.902161154299004*^9, 3.902161155309304*^9}, {3.902161213958499*^9, 
   3.9021612244081287`*^9}, {3.902161706709229*^9, 3.9021617552752123`*^9}, {
   3.902161829053338*^9, 3.902161874799492*^9}, {3.9021619319637413`*^9, 
   3.902161933244416*^9}, {3.9021619635538588`*^9, 3.902161966050132*^9}, {
   3.9021620636337137`*^9, 3.902162065476829*^9}, {3.902162109262967*^9, 
   3.9021621384867697`*^9}, {3.9021622913346567`*^9, 3.902162346241014*^9}, {
   3.902162419580595*^9, 3.9021624257770967`*^9}, {3.902162476044937*^9, 
   3.90216258673118*^9}, {3.9021819778752213`*^9, 3.902181988680463*^9}, {
   3.902182333495875*^9, 3.9021823463986797`*^9}, 3.902182391711767*^9, {
   3.902182422519552*^9, 3.9021824755880213`*^9}, 3.902182515668507*^9, {
   3.902182552129517*^9, 3.902182552509975*^9}, {3.902182666517251*^9, 
   3.902182682209094*^9}, {3.90218271910001*^9, 3.902182719403943*^9}, {
   3.9021833080662518`*^9, 3.902183320509087*^9}, {3.902183383914641*^9, 
   3.902183405477783*^9}, {3.9022294993146467`*^9, 3.902229505963492*^9}, {
   3.902229579989684*^9, 3.902229613491081*^9}, {3.9022296480820208`*^9, 
   3.9022296516414957`*^9}, {3.9022297459135323`*^9, 
   3.9022297509938374`*^9}, {3.90223010190806*^9, 3.9022301506237717`*^9}, {
   3.902230329710114*^9, 3.902230352515791*^9}, {3.902231461932437*^9, 
   3.902231463549939*^9}, {3.902232850828144*^9, 3.902232853121435*^9}, 
   3.9022337633525667`*^9, {3.914891615230335*^9, 3.91489162630768*^9}, {
   3.91489189304036*^9, 3.914891894350165*^9}, {3.9148919778646927`*^9, 
   3.914892082611939*^9}, {3.914892116595964*^9, 3.914892140823224*^9}, {
   3.914892265273246*^9, 3.914892268866791*^9}, {3.9151025037649717`*^9, 
   3.91510250889507*^9}, {3.915103841276348*^9, 3.9151038628995657`*^9}, {
   3.91510411616498*^9, 3.915104129477434*^9}, {3.9151239347112837`*^9, 
   3.91512393550307*^9}, {3.9450084801941643`*^9, 3.945008480624708*^9}, {
   3.945008638397758*^9, 3.945008638692762*^9}, {3.945008874199868*^9, 
   3.945008879685039*^9}, {3.9450090219342833`*^9, 3.945009028229454*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"87581d54-2a9b-490d-b23c-2f13c25b1b81"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Input state   \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"1"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]}],
  SequenceForm["Input state   ", 
   RawBoxes[
    RowBox[{
      RowBox[{
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"1"}]}, "Ket"], FontWeight -> "Plain"], 
         Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]}]}]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.945082408953166*^9, 3.9450825974073153`*^9, 
  3.945086395582759*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"8f2b6f7b-6202-4068-bcf5-9989782d7a1c"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6859999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {
          RGBColor[1, 0, 0], FontWeight -> Bold}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {
          RGBColor[1, 0, 0], FontWeight -> Bold}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 100.},
          RoundingRadius->0],
         StatusArea[#, 100]& ,
         TagBoxNote->"100"],
        StyleBox["100", {
          RGBColor[1, 0, 0], FontWeight -> Bold}, StripOnInput -> False]],
       Annotation[#, 
        Style[100, {
          RGBColor[1, 0, 0], FontWeight -> Bold}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{-0.8428550619082302, 0.}, {3.870688128186453, 0.}}], 
       StyleBox[
        {RGBColor[1, 0, 0], Thickness[Tiny], 
         StyleBox[InsetBox[
           TagBox["\<\"Output Values\"\>",
            HoldForm], Offset[{10., 0.}, {2.4512017479970867, 0.}], NCache[
           ImageScaled[{0, Rational[1, 2]}], ImageScaled[{0, 0.5}]], 
           Automatic, {1, 0}],
          StripOnInput->False,
          FontWeight->Bold]}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{2.4512017479970867`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {2.4512017479970867`, 
            0.}]}], {{}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {RGBColor[1, 0, 0], Thickness[Tiny], 
          
          StyleBox[{
            InsetBox["\<\"0\"\>", Offset[{0, -2}, {1., 0.}], NCache[
             ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
             Automatic, {1, 0}], 
            InsetBox["\<\"1\"\>", Offset[{0, -2}, {2., 0.}], NCache[
             ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
             Automatic, {1, 0}]},
           StripOnInput->False,
           FontWeight->Bold]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Output Values\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Counts\"", HoldForm], TraditionalForm]},
  AxesOrigin->{-0.8428550619082302, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{
    RGBColor[1, 0, 0], Bold},
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.9450824093283577`*^9, 3.945082597698944*^9, 
  3.945086396142169*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"0cd0c8e1-19d0-437d-80cb-485929a901e1"]
}, Open  ]],

Cell[TextData[{
 StyleBox["In the run executed above, we fed state | 1 \[RightAngleBracket] \
into ",
  Background->RGBColor[0.87, 0.94, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{"\[InvisiblePrefixScriptBase]", 
    SubscriptBox["U", "1"]}], TraditionalForm]],
  Background->RGBColor[0.87, 0.94, 1],ExpressionUUID->
  "f39e7985-bade-4166-b83e-cd7b3446a9bb"],
 StyleBox[" 100 times. The graph shows that the measurement device registered \
the value 1 for each run.  ",
  Background->RGBColor[0.87, 0.94, 1]],
 "\n\n",
 StyleBox["Exercise: Repeat this circuit run but let |0\[RightAngleBracket] \
be the input state by replacing command \
\[OpenCurlyDoubleQuote]inputstate=ket1\[CloseCurlyDoubleQuote]  above with \
\[OpenCurlyDoubleQuote]inputstate=ket0\[CloseCurlyDoubleQuote]  \n\n",
  Background->RGBColor[1, 0.85, 0.85]],
 StyleBox["Analysis: You should have counted 100 instances of the value \
\[OpenCurlyDoubleQuote]0\[CloseCurlyDoubleQuote] in this exercise. Convince \
yourself  that \[OpenCurlyDoubleQuote]gate0\[CloseCurlyDoubleQuote] \
represents an Identity gate; that is it does not alter the input state.",
  Background->RGBColor[0.88, 1, 0.88]]
}], "Text",
 CellChangeTimes->{{3.945007911087696*^9, 3.945008063451991*^9}, {
  3.945008096917714*^9, 3.945008193677504*^9}, {3.9450083772615957`*^9, 
  3.9450084740848417`*^9}, {3.945009050627824*^9, 3.945009117109619*^9}, {
  3.945009789417609*^9, 3.945009808552595*^9}, {3.94501058114927*^9, 
  3.945010589340774*^9}, {3.945013630516574*^9, 3.945013633243539*^9}, {
  3.945013991640006*^9, 
  3.945014054916292*^9}},ExpressionUUID->"86e921ae-a72f-461f-a537-\
1b8658ff3886"],

Cell["", "PageBreak",
 PageBreakBelow->True,ExpressionUUID->"cd3fe150-a5eb-4089-bcae-abd0a45b6f99"],

Cell[TextData[StyleBox["We now repeat this circuit using \
\[OpenCurlyDoubleQuote]gate1\[CloseCurlyDoubleQuote].",
 FontSize->18,
 Background->RGBColor[0.87, 0.94, 1]]], "Text",
 CellChangeTimes->{{3.9450104126415873`*^9, 3.945010441500655*^9}, {
  3.945010479494626*^9, 
  3.9450104802445374`*^9}},ExpressionUUID->"60216bca-18c4-45e5-bf21-\
dc4b588bb2bf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"circuit", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", "gate1", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"circuitdiagram", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"gate1", ",", "m1"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"circuitdiagram", "[", "\"\<Diagram\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.902159349881194*^9, 3.902159410649467*^9}, {
   3.902159545572278*^9, 3.902159564348279*^9}, {3.902160092065402*^9, 
   3.90216009874614*^9}, {3.902160134714418*^9, 3.902160137640456*^9}, {
   3.902160195690303*^9, 3.902160210203946*^9}, {3.902160269593433*^9, 
   3.902160280022675*^9}, {3.9021782602042837`*^9, 3.902178290844994*^9}, {
   3.9021783222297277`*^9, 3.9021783235341578`*^9}, {3.902178418706346*^9, 
   3.9021785843315973`*^9}, {3.9021787724763613`*^9, 3.902178820501935*^9}, {
   3.902178852890966*^9, 3.9021788556115627`*^9}, {3.902178887293679*^9, 
   3.902179000039415*^9}, {3.902180489889827*^9, 3.902180619510532*^9}, {
   3.902180714531172*^9, 3.902180718592639*^9}, {3.9021809027484503`*^9, 
   3.902180902966918*^9}, {3.902180938916544*^9, 3.902181050254599*^9}, {
   3.902181267077065*^9, 3.902181363289144*^9}, {3.902181480908724*^9, 
   3.902181560232634*^9}, {3.9021816140104647`*^9, 3.902181626554793*^9}, {
   3.902182023898634*^9, 3.902182031962432*^9}, {3.902182090666836*^9, 
   3.9021821717306023`*^9}, {3.9021822066172247`*^9, 
   3.9021822546212378`*^9}, {3.902182284949278*^9, 3.9021823235372887`*^9}, {
   3.902182444388006*^9, 3.902182460587462*^9}, {3.902182497431952*^9, 
   3.902182497971244*^9}, {3.9021825899316597`*^9, 3.902182600514612*^9}, {
   3.9021829258620377`*^9, 3.902183005420765*^9}, {3.902183038722582*^9, 
   3.902183046889258*^9}, {3.902183146095436*^9, 3.902183180909424*^9}, {
   3.9021832196542*^9, 3.9021832663767*^9}, 3.9021834227737217`*^9, {
   3.902184008376007*^9, 3.9021841009593287`*^9}, {3.902185056875433*^9, 
   3.902185063647262*^9}, {3.9021851127874317`*^9, 3.9021851392227507`*^9}, {
   3.902185198925695*^9, 3.902185286372054*^9}, {3.902229369959395*^9, 
   3.902229405874107*^9}, {3.9022295399357347`*^9, 3.902229555835684*^9}, {
   3.90223044228968*^9, 3.902230496834584*^9}, 3.9022305356680937`*^9, {
   3.902230822550284*^9, 3.902230823581956*^9}, {3.902230881644936*^9, 
   3.902230887764627*^9}, {3.902232471989459*^9, 3.9022324764832983`*^9}, {
   3.9022326755319433`*^9, 3.902232679402471*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"ac2350a8-d3b5-4b28-8210-f29a8e0e2198"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -1}, {1.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{0.375, -1}, {0.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
     LineBox[{{0.375, -0.0234375}, {2.625, -0.0234375}}], 
     LineBox[{{0.375, 0.0234375}, {2.625, 0.0234375}}]}, InsetBox[
     StyleBox["\<\"c\"\>",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, 0}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}, {
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.0313725, 0.027451, 0.027451], Opacity[0.25]}], 
       RectangleBox[{0.625, -1.375}, {1.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          SubscriptBox["\<\"U\"\>", "1"],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      SubscriptBox["\"U\"", "1"]],
     Annotation[#, 
      Subscript["U", 1], "Tooltip"]& ], {
     TagBox[
      TooltipBox[{
        TagBox[
         TooltipBox[{
           TagBox[
            TooltipBox[
             {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
              0.7367, 0.358, 0.503], Opacity[0.3]}], 
              RectangleBox[{1.625, -1.375}, {2.375, -0.625},
               RoundingRadius->0.1]},
             "\"Measurement\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Measurement", "Tooltip"]& ], {
            {Thickness[Small], 
             LineBox[{{2.1516906864453027`, -1.0772902651951612`}, {
              2.212366961023424, -1.0332063712732258`}}], 
             LineBox[{{2.1169043378485126`, -1.0409065970372444`}, {
              2.1636660729879176`, -0.9822692358521422}}], 
             LineBox[{{2.073692193435111, -1.015088542646603}, {
              2.103169070809155, -0.9461239597052442}}], 
             LineBox[{{2.0251687373408105`, -1.0016969196685124`}, {
              2.0352362322771347`, -0.9273756875359171}}], 
             LineBox[{{1.9748312626591897`, -1.0016969196685122`}, {
              1.9647637677228655`, -0.9273756875359171}}], 
             LineBox[{{1.9263078065648893`, -1.015088542646603}, {
              1.8968309291908452`, -0.9461239597052442}}], 
             LineBox[{{1.8830956621514874`, -1.0409065970372444`}, {
              1.8363339270120824`, -0.9822692358521422}}], 
             LineBox[{{1.8483093135546973`, -1.0772902651951612`}, {
              1.7876330389765764`, -1.0332063712732258`}}]}, 
            {Thickness[Medium], 
             LineBox[{{2, -1.1875}, {
               2.17024643740233, -0.853372553429362}}]}}, 
           {Dashing[{Small, Small}]}},
          RowBox[{"\"Measurement\"", "[", "None", "]"}]],
         Annotation[#, 
          "Measurement"[None], "Tooltip"]& ], 
        {Dashing[{Small, Small}]}},
       TemplateBox[{
         RowBox[{"\"Measurement\"", "[", "None", "]"}], 
         RowBox[{"\[CircleTimes]", "1"}]}, "Superscript", SyntaxForm -> 
        SuperscriptBox]],
      Annotation[#, 
       Superscript[
        "Measurement"[None], 
        CircleTimes[1]], "Tooltip"]& ], 
     {RGBColor[0.537254, 0.537254, 0.537254], 
      LineBox[{{2., -0.625}, {2., -0.2109375}}], 
      {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
       FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
       PolygonBox[{{1.90625, -0.2109375}, {2.09375, -0.2109375}, {
        2., -0.0234375}}]}}}}, InsetBox[
    StyleBox["1",
     StripOnInput->False,
     FontSize->10,
     FontSlant->Italic,
     FontColor->RGBColor[0.537254, 0.537254, 0.537254],
     Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
    ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{3.945082409408305*^9, 3.945082597735046*^9, 
  3.945086396304885*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"8c36c9ef-8b8c-48fa-add6-bc2fad39fdd2"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s run the above computation several times and take \
statistics of output values.\
\>", "Text",
 CellChangeTimes->{{3.902229759336257*^9, 3.9022297829364433`*^9}, {
  3.9022313615073977`*^9, 
  3.9022314061157093`*^9}},ExpressionUUID->"7b01a167-79d5-4268-9832-\
51141b0d9c9b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"runs", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputstate", "=", "ket1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Input state   \>\"", ",", 
   RowBox[{"inputstate", "[", "\"\<Formula\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qm", "=", 
   RowBox[{"QuantumMeasurementSimulation", "[", 
    RowBox[{
     RowBox[{"circuit", "[", "inputstate", "]"}], ",", 
     RowBox[{"QuantumMeasurementOperator", " ", "/@", 
      RowBox[{"{", "\"\<Z\>\"", "}"}]}], ",", "runs"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"qm", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ChartLabels", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Output Values\>\"", ",", "\"\<Counts\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Bold"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.902160669187504*^9, {3.902160755058207*^9, 3.9021608403648376`*^9}, {
   3.902160883386451*^9, 3.902160886693926*^9}, {3.902160932177886*^9, 
   3.902160963272201*^9}, {3.9021609985857887`*^9, 3.902161001455246*^9}, {
   3.902161154299004*^9, 3.902161155309304*^9}, {3.902161213958499*^9, 
   3.9021612244081287`*^9}, {3.902161706709229*^9, 3.9021617552752123`*^9}, {
   3.902161829053338*^9, 3.902161874799492*^9}, {3.9021619319637413`*^9, 
   3.902161933244416*^9}, {3.9021619635538588`*^9, 3.902161966050132*^9}, {
   3.9021620636337137`*^9, 3.902162065476829*^9}, {3.902162109262967*^9, 
   3.9021621384867697`*^9}, {3.9021622913346567`*^9, 3.902162346241014*^9}, {
   3.902162419580595*^9, 3.9021624257770967`*^9}, {3.902162476044937*^9, 
   3.90216258673118*^9}, {3.9021819778752213`*^9, 3.902181988680463*^9}, {
   3.902182333495875*^9, 3.9021823463986797`*^9}, 3.902182391711767*^9, {
   3.902182422519552*^9, 3.9021824755880213`*^9}, 3.902182515668507*^9, {
   3.902182552129517*^9, 3.902182552509975*^9}, {3.902182666517251*^9, 
   3.902182682209094*^9}, {3.90218271910001*^9, 3.902182719403943*^9}, {
   3.9021833080662518`*^9, 3.902183320509087*^9}, {3.902183383914641*^9, 
   3.902183405477783*^9}, {3.9022294993146467`*^9, 3.902229505963492*^9}, {
   3.902229579989684*^9, 3.902229613491081*^9}, {3.9022296480820208`*^9, 
   3.9022296516414957`*^9}, {3.9022297459135323`*^9, 
   3.9022297509938374`*^9}, {3.90223010190806*^9, 3.9022301506237717`*^9}, {
   3.902230329710114*^9, 3.902230352515791*^9}, {3.902231461932437*^9, 
   3.902231463549939*^9}, {3.902232835020475*^9, 3.902232837316646*^9}, 
   3.9022337572663193`*^9, {3.914892214513296*^9, 3.914892243814351*^9}, {
   3.914893032212688*^9, 3.914893105456318*^9}, {3.915102606469451*^9, 
   3.9151026204461203`*^9}, {3.915124002158733*^9, 3.9151240316732597`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"57b23023-0018-499b-8b0a-4d73195e2226"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Input state   \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"1"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]}],
  SequenceForm["Input state   ", 
   RawBoxes[
    RowBox[{
      RowBox[{
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"1"}]}, "Ket"], FontWeight -> "Plain"], 
         Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]}]}]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.9450824094115*^9, 3.94508259773904*^9, 
  3.945086396309051*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"0566b971-52c9-4a64-b7ef-58478e3092c4"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6859999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 100.},
          RoundingRadius->0],
         StatusArea[#, 100]& ,
         TagBoxNote->"100"],
        StyleBox["100", {
          RGBColor[1, 0, 0], FontWeight -> Bold}, StripOnInput -> False]],
       Annotation[#, 
        Style[100, {
          RGBColor[1, 0, 0], FontWeight -> Bold}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {
          RGBColor[1, 0, 0], FontWeight -> Bold}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {
          RGBColor[1, 0, 0], FontWeight -> Bold}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{-0.8428550619082302, 0.}, {3.870688128186453, 0.}}], 
       StyleBox[
        {RGBColor[1, 0, 0], Thickness[Tiny], 
         StyleBox[InsetBox[
           TagBox["\<\"Output Values\"\>",
            HoldForm], Offset[{10., 0.}, {2.4512017479970867, 0.}], NCache[
           ImageScaled[{0, Rational[1, 2]}], ImageScaled[{0, 0.5}]], 
           Automatic, {1, 0}],
          StripOnInput->False,
          FontWeight->Bold]}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{2.4512017479970867`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {2.4512017479970867`, 
            0.}]}], {{}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {RGBColor[1, 0, 0], Thickness[Tiny], 
          
          StyleBox[{
            InsetBox["\<\"0\"\>", Offset[{0, -2}, {1., 0.}], NCache[
             ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
             Automatic, {1, 0}], 
            InsetBox["\<\"1\"\>", Offset[{0, -2}, {2., 0.}], NCache[
             ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
             Automatic, {1, 0}]},
           StripOnInput->False,
           FontWeight->Bold]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Output Values\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Counts\"", HoldForm], TraditionalForm]},
  AxesOrigin->{-0.8428550619082302, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{
    RGBColor[1, 0, 0], Bold},
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.945082409946137*^9, 3.945082597885249*^9, 
  3.945086396665512*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"e6fb61f7-0ea2-430f-9c8a-f70deff0b014"]
}, Open  ]],

Cell[TextData[{
 StyleBox["In the run executed above, we fed state | 1 \[RightAngleBracket] \
into ",
  Background->RGBColor[0.87, 0.94, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{"\[InvisiblePrefixScriptBase]", 
    SubscriptBox["U", "1"]}], TraditionalForm]],
  Background->RGBColor[0.87, 0.94, 1],ExpressionUUID->
  "cafac9fc-c164-4c8a-ba6d-e3eb390d1174"],
 StyleBox[" 100 times, the graph shows that the measurement device counted \
the value 0 for each run.  ",
  Background->RGBColor[0.87, 0.94, 1]],
 "\n\n",
 StyleBox["Exercise: Repeat this circuit run but let |0\[RightAngleBracket] \
be the input state by replacing command \
\[OpenCurlyDoubleQuote]inputstate=ket1\[CloseCurlyDoubleQuote]  above with \
\[OpenCurlyDoubleQuote]inputstate=ket0\[CloseCurlyDoubleQuote]  \n\n",
  Background->RGBColor[1, 0.85, 0.85]],
 StyleBox["Analysis: You should have counted 100 instances of the value \
\[OpenCurlyDoubleQuote]1\[CloseCurlyDoubleQuote] in the above exercise: \
convince yourself from these statistics that \[OpenCurlyDoubleQuote]gate0\
\[CloseCurlyDoubleQuote] represents a NOT gate; that is \
\[OpenCurlyDoubleQuote]flips\[CloseCurlyDoubleQuote] the value of \
\[OpenCurlyDoubleQuote]0\[CloseCurlyDoubleQuote] into \
\[OpenCurlyDoubleQuote]1\[CloseCurlyDoubleQuote] and vice versa.",
  Background->RGBColor[0.88, 1, 0.88]]
}], "Text",
 CellChangeTimes->{{3.94501082110341*^9, 
  3.945010913439007*^9}},ExpressionUUID->"7096d929-4adc-43cc-aa63-\
66d0cc3556e4"],

Cell["Now we repeat with a new gate \[OpenCurlyDoubleQuote]gate2\
\[CloseCurlyDoubleQuote]", "Text",
 CellChangeTimes->{{3.945010926594644*^9, 
  3.945010951147903*^9}},ExpressionUUID->"bf7334b5-e1d4-491e-8671-\
16402aed04e2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"circuit", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", "gate2", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"circuitdiagram", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"gate2", ",", "m1"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"circuitdiagram", "[", "\"\<Diagram\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.902159349881194*^9, 3.902159410649467*^9}, {
   3.902159545572278*^9, 3.902159564348279*^9}, {3.902160092065402*^9, 
   3.90216009874614*^9}, {3.902160134714418*^9, 3.902160137640456*^9}, {
   3.902160195690303*^9, 3.902160210203946*^9}, {3.902160269593433*^9, 
   3.902160280022675*^9}, {3.9021782602042837`*^9, 3.902178290844994*^9}, {
   3.9021783222297277`*^9, 3.9021783235341578`*^9}, {3.902178418706346*^9, 
   3.9021785843315973`*^9}, {3.9021787724763613`*^9, 3.902178820501935*^9}, {
   3.902178852890966*^9, 3.9021788556115627`*^9}, {3.902178887293679*^9, 
   3.902179000039415*^9}, {3.902180489889827*^9, 3.902180619510532*^9}, {
   3.902180714531172*^9, 3.902180718592639*^9}, {3.9021809027484503`*^9, 
   3.902180902966918*^9}, {3.902180938916544*^9, 3.902181050254599*^9}, {
   3.902181267077065*^9, 3.902181363289144*^9}, {3.902181480908724*^9, 
   3.902181560232634*^9}, {3.9021816140104647`*^9, 3.902181626554793*^9}, {
   3.902182023898634*^9, 3.902182031962432*^9}, {3.902182090666836*^9, 
   3.9021821717306023`*^9}, {3.9021822066172247`*^9, 
   3.9021822546212378`*^9}, {3.902182284949278*^9, 3.9021823235372887`*^9}, {
   3.902182444388006*^9, 3.902182460587462*^9}, {3.902182497431952*^9, 
   3.902182497971244*^9}, {3.9021825899316597`*^9, 3.902182600514612*^9}, {
   3.9021829258620377`*^9, 3.902183005420765*^9}, {3.902183038722582*^9, 
   3.902183046889258*^9}, {3.902183146095436*^9, 3.902183180909424*^9}, {
   3.9021832196542*^9, 3.9021832663767*^9}, 3.9021834227737217`*^9, {
   3.902184008376007*^9, 3.9021841009593287`*^9}, {3.902185056875433*^9, 
   3.902185063647262*^9}, {3.9021851127874317`*^9, 3.9021851392227507`*^9}, {
   3.902185198925695*^9, 3.902185286372054*^9}, {3.902229369959395*^9, 
   3.902229405874107*^9}, {3.9022295399357347`*^9, 3.902229555835684*^9}, {
   3.90223044228968*^9, 3.902230496834584*^9}, 3.9022305356680937`*^9, {
   3.902230822550284*^9, 3.902230823581956*^9}, {3.902230881644936*^9, 
   3.902230887764627*^9}, {3.902232471989459*^9, 3.9022324764832983`*^9}, {
   3.9022326861534758`*^9, 3.902232689502862*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"8c8d3c32-de6d-47c7-9bfa-666c8643cde6"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -1}, {1.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{0.375, -1}, {0.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
     LineBox[{{0.375, -0.0234375}, {2.625, -0.0234375}}], 
     LineBox[{{0.375, 0.0234375}, {2.625, 0.0234375}}]}, InsetBox[
     StyleBox["\<\"c\"\>",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, 0}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}, {
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.0313725, 0.027451, 0.027451], Opacity[0.25]}], 
       RectangleBox[{0.625, -1.375}, {1.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          SubscriptBox["\<\"U\"\>", "1"],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      SubscriptBox["\"U\"", "1"]],
     Annotation[#, 
      Subscript["U", 1], "Tooltip"]& ], {
     TagBox[
      TooltipBox[{
        TagBox[
         TooltipBox[{
           TagBox[
            TooltipBox[
             {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
              0.7367, 0.358, 0.503], Opacity[0.3]}], 
              RectangleBox[{1.625, -1.375}, {2.375, -0.625},
               RoundingRadius->0.1]},
             "\"Measurement\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Measurement", "Tooltip"]& ], {
            {Thickness[Small], 
             LineBox[{{2.1516906864453027`, -1.0772902651951612`}, {
              2.212366961023424, -1.0332063712732258`}}], 
             LineBox[{{2.1169043378485126`, -1.0409065970372444`}, {
              2.1636660729879176`, -0.9822692358521422}}], 
             LineBox[{{2.073692193435111, -1.015088542646603}, {
              2.103169070809155, -0.9461239597052442}}], 
             LineBox[{{2.0251687373408105`, -1.0016969196685124`}, {
              2.0352362322771347`, -0.9273756875359171}}], 
             LineBox[{{1.9748312626591897`, -1.0016969196685122`}, {
              1.9647637677228655`, -0.9273756875359171}}], 
             LineBox[{{1.9263078065648893`, -1.015088542646603}, {
              1.8968309291908452`, -0.9461239597052442}}], 
             LineBox[{{1.8830956621514874`, -1.0409065970372444`}, {
              1.8363339270120824`, -0.9822692358521422}}], 
             LineBox[{{1.8483093135546973`, -1.0772902651951612`}, {
              1.7876330389765764`, -1.0332063712732258`}}]}, 
            {Thickness[Medium], 
             LineBox[{{2, -1.1875}, {
               2.17024643740233, -0.853372553429362}}]}}, 
           {Dashing[{Small, Small}]}},
          RowBox[{"\"Measurement\"", "[", "None", "]"}]],
         Annotation[#, 
          "Measurement"[None], "Tooltip"]& ], 
        {Dashing[{Small, Small}]}},
       TemplateBox[{
         RowBox[{"\"Measurement\"", "[", "None", "]"}], 
         RowBox[{"\[CircleTimes]", "1"}]}, "Superscript", SyntaxForm -> 
        SuperscriptBox]],
      Annotation[#, 
       Superscript[
        "Measurement"[None], 
        CircleTimes[1]], "Tooltip"]& ], 
     {RGBColor[0.537254, 0.537254, 0.537254], 
      LineBox[{{2., -0.625}, {2., -0.2109375}}], 
      {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
       FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
       PolygonBox[{{1.90625, -0.2109375}, {2.09375, -0.2109375}, {
        2., -0.0234375}}]}}}}, InsetBox[
    StyleBox["1",
     StripOnInput->False,
     FontSize->10,
     FontSlant->Italic,
     FontColor->RGBColor[0.537254, 0.537254, 0.537254],
     Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
    ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{3.9450824101179867`*^9, 3.945082597921694*^9, 
  3.945086396743493*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"055adc4b-4d32-440a-aced-67c204976a80"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s run the above computation several times and take \
statistics of output values.\
\>", "Text",
 CellChangeTimes->{{3.902229759336257*^9, 3.9022297829364433`*^9}, {
  3.9022313615073977`*^9, 
  3.9022314061157093`*^9}},ExpressionUUID->"81927af6-5af6-48a1-bd5c-\
79838714836e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"runs", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputstate", "=", "ket1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Input state   \>\"", ",", 
   RowBox[{"inputstate", "[", "\"\<Formula\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qm", "=", 
   RowBox[{"QuantumMeasurementSimulation", "[", 
    RowBox[{
     RowBox[{"circuit", "[", "inputstate", "]"}], ",", 
     RowBox[{"QuantumMeasurementOperator", " ", "/@", 
      RowBox[{"{", "\"\<Z\>\"", "}"}]}], ",", "runs"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"qm", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ChartLabels", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Output Values\>\"", ",", "\"\<Counts\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Bold"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.902160669187504*^9, {3.902160755058207*^9, 3.9021608403648376`*^9}, {
   3.902160883386451*^9, 3.902160886693926*^9}, {3.902160932177886*^9, 
   3.902160963272201*^9}, {3.9021609985857887`*^9, 3.902161001455246*^9}, {
   3.902161154299004*^9, 3.902161155309304*^9}, {3.902161213958499*^9, 
   3.9021612244081287`*^9}, {3.902161706709229*^9, 3.9021617552752123`*^9}, {
   3.902161829053338*^9, 3.902161874799492*^9}, {3.9021619319637413`*^9, 
   3.902161933244416*^9}, {3.9021619635538588`*^9, 3.902161966050132*^9}, {
   3.9021620636337137`*^9, 3.902162065476829*^9}, {3.902162109262967*^9, 
   3.9021621384867697`*^9}, {3.9021622913346567`*^9, 3.902162346241014*^9}, {
   3.902162419580595*^9, 3.9021624257770967`*^9}, {3.902162476044937*^9, 
   3.90216258673118*^9}, {3.9021819778752213`*^9, 3.902181988680463*^9}, {
   3.902182333495875*^9, 3.9021823463986797`*^9}, 3.902182391711767*^9, {
   3.902182422519552*^9, 3.9021824755880213`*^9}, 3.902182515668507*^9, {
   3.902182552129517*^9, 3.902182552509975*^9}, {3.902182666517251*^9, 
   3.902182682209094*^9}, {3.90218271910001*^9, 3.902182719403943*^9}, {
   3.9021833080662518`*^9, 3.902183320509087*^9}, {3.902183383914641*^9, 
   3.902183405477783*^9}, {3.9022294993146467`*^9, 3.902229505963492*^9}, {
   3.902229579989684*^9, 3.902229613491081*^9}, {3.9022296480820208`*^9, 
   3.9022296516414957`*^9}, {3.9022297459135323`*^9, 
   3.9022297509938374`*^9}, {3.90223010190806*^9, 3.9022301506237717`*^9}, {
   3.902230329710114*^9, 3.902230352515791*^9}, {3.902231461932437*^9, 
   3.902231463549939*^9}, {3.90223282039814*^9, 3.902232824919651*^9}, 
   3.9022337505145903`*^9, {3.9148931483980513`*^9, 3.914893149058095*^9}, {
   3.914893187996553*^9, 3.9148932182162027`*^9}, {3.915102670926919*^9, 
   3.915102683978965*^9}, {3.915124139657505*^9, 3.915124139914256*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"78c4ae33-16c2-4992-9459-a6f847fd4931"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Input state   \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"1"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]}],
  SequenceForm["Input state   ", 
   RawBoxes[
    RowBox[{
      RowBox[{
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"1"}]}, "Ket"], FontWeight -> "Plain"], 
         Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]}]}]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.945082410120926*^9, 3.9450825979247704`*^9, 
  3.945086396748198*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"71ac5e1c-57ba-4bba-9176-4ee3ba0a1194"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6859999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 94.},
          RoundingRadius->0],
         StatusArea[#, 94]& ,
         TagBoxNote->"94"],
        StyleBox["94", {
          RGBColor[1, 0, 0], FontWeight -> Bold}, StripOnInput -> False]],
       Annotation[#, 
        Style[94, {
          RGBColor[1, 0, 0], FontWeight -> Bold}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 6.},
          RoundingRadius->0],
         StatusArea[#, 6]& ,
         TagBoxNote->"6"],
        StyleBox["6", {
          RGBColor[1, 0, 0], FontWeight -> Bold}, StripOnInput -> False]],
       Annotation[#, 
        Style[6, {
          RGBColor[1, 0, 0], FontWeight -> Bold}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{-0.8428550619082302, 0.}, {3.870688128186453, 0.}}], 
       StyleBox[
        {RGBColor[1, 0, 0], Thickness[Tiny], 
         StyleBox[InsetBox[
           TagBox["\<\"Output Values\"\>",
            HoldForm], Offset[{10., 0.}, {2.4512017479970867, 0.}], NCache[
           ImageScaled[{0, Rational[1, 2]}], ImageScaled[{0, 0.5}]], 
           Automatic, {1, 0}],
          StripOnInput->False,
          FontWeight->Bold]}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{2.4512017479970867`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {2.4512017479970867`, 
            0.}]}], {{}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {RGBColor[1, 0, 0], Thickness[Tiny], 
          
          StyleBox[{
            InsetBox["\<\"0\"\>", Offset[{0, -2}, {1., 0.}], NCache[
             ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
             Automatic, {1, 0}], 
            InsetBox["\<\"1\"\>", Offset[{0, -2}, {2., 0.}], NCache[
             ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
             Automatic, {1, 0}]},
           StripOnInput->False,
           FontWeight->Bold]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Output Values\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Counts\"", HoldForm], TraditionalForm]},
  AxesOrigin->{-0.8428550619082302, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{
    RGBColor[1, 0, 0], Bold},
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.945082410480339*^9, 3.945082598071741*^9, 
  3.945086397099077*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"c131b134-ccb2-4519-bca5-30fadcab999d"]
}, Open  ]],

Cell[TextData[{
 StyleBox["In the run executed above, we fed state | 1 \[RightAngleBracket] \
into ",
  Background->RGBColor[0.87, 0.94, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{"\[InvisiblePrefixScriptBase]", 
    SubscriptBox["U", "1"]}], TraditionalForm]],
  Background->RGBColor[0.87, 0.94, 1],ExpressionUUID->
  "3cbe6663-d535-4ae4-b9bb-8aad0911744a"],
 StyleBox[" 100 times, the graph shows that the measurement device counted \
mostly the value \[OpenCurlyDoubleQuote]0\[CloseCurlyDoubleQuote] for the \
runs, but some runs gave the value \[OpenCurlyDoubleQuote]1\
\[CloseCurlyDoubleQuote]  ",
  Background->RGBColor[0.87, 0.94, 1]],
 "\n\n",
 StyleBox["Exercise: Repeat this circuit run but let |0\[RightAngleBracket] \
be the input state by replacing command \
\[OpenCurlyDoubleQuote]inputstate=ket1\[CloseCurlyDoubleQuote]  above with \
\[OpenCurlyDoubleQuote]inputstate=ket0\[CloseCurlyDoubleQuote]  \n\n",
  Background->RGBColor[1, 0.85, 0.85]],
 StyleBox["Analysis: You should have mostly counted instances of the value \
\[OpenCurlyDoubleQuote]1\[CloseCurlyDoubleQuote] in the above exercise, but \
did find instances where the value \[OpenCurlyDoubleQuote]0\
\[CloseCurlyDoubleQuote] was recorded: convince yourself from these \
statistics that \[OpenCurlyDoubleQuote]gate2\[CloseCurlyDoubleQuote] \
represents a \[OpenCurlyDoubleQuote]noisy\[CloseCurlyDoubleQuote] NOT gate; \
that is it mostly \[OpenCurlyDoubleQuote]flips\[CloseCurlyDoubleQuote] the \
value of \[OpenCurlyDoubleQuote]0\[CloseCurlyDoubleQuote] into \
\[OpenCurlyDoubleQuote]1\[CloseCurlyDoubleQuote] and vice versa, but \
sometimes acts, because of imperfections, as an identity gate. Noise is a \
feature in all real-life gates; though it can be managed using so-called \
error-correction codes (see Chap9 in text)",
  Background->RGBColor[0.88, 1, 0.88]]
}], "Text",
 CellChangeTimes->{{3.945011138010294*^9, 3.945011238421529*^9}, {
  3.9450113273507347`*^9, 3.94501141053235*^9}, {3.945011483868734*^9, 
  3.945011611952334*^9}, {3.945012220690235*^9, 
  3.945012273126343*^9}},ExpressionUUID->"025d97f7-37b3-4045-8e96-\
7609a9cf2ad9"],

Cell["", "PageBreak",
 PageBreakBelow->True,ExpressionUUID->"45403e72-7d00-4826-a3f4-d1aa2f35d0b9"],

Cell[TextData[StyleBox["Lets try to figure out what \
\[OpenCurlyDoubleQuote]gate3\[CloseCurlyDoubleQuote] is doing",
 FontSize->18,
 Background->RGBColor[0.87, 0.94, 1]]], "Text",
 CellChangeTimes->{{3.945011624549821*^9, 
  3.9450116449175577`*^9}},ExpressionUUID->"9d1c52b8-b438-4abb-b9df-\
759a084b327a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"circuit", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", "gate3", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"circuitdiagram", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"gate3", ",", "m1"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"circuitdiagram", "[", "\"\<Diagram\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.902159349881194*^9, 3.902159410649467*^9}, {
   3.902159545572278*^9, 3.902159564348279*^9}, {3.902160092065402*^9, 
   3.90216009874614*^9}, {3.902160134714418*^9, 3.902160137640456*^9}, {
   3.902160195690303*^9, 3.902160210203946*^9}, {3.902160269593433*^9, 
   3.902160280022675*^9}, {3.9021782602042837`*^9, 3.902178290844994*^9}, {
   3.9021783222297277`*^9, 3.9021783235341578`*^9}, {3.902178418706346*^9, 
   3.9021785843315973`*^9}, {3.9021787724763613`*^9, 3.902178820501935*^9}, {
   3.902178852890966*^9, 3.9021788556115627`*^9}, {3.902178887293679*^9, 
   3.902179000039415*^9}, {3.902180489889827*^9, 3.902180619510532*^9}, {
   3.902180714531172*^9, 3.902180718592639*^9}, {3.9021809027484503`*^9, 
   3.902180902966918*^9}, {3.902180938916544*^9, 3.902181050254599*^9}, {
   3.902181267077065*^9, 3.902181363289144*^9}, {3.902181480908724*^9, 
   3.902181560232634*^9}, {3.9021816140104647`*^9, 3.902181626554793*^9}, {
   3.902182023898634*^9, 3.902182031962432*^9}, {3.902182090666836*^9, 
   3.9021821717306023`*^9}, {3.9021822066172247`*^9, 
   3.9021822546212378`*^9}, {3.902182284949278*^9, 3.9021823235372887`*^9}, {
   3.902182444388006*^9, 3.902182460587462*^9}, {3.902182497431952*^9, 
   3.902182497971244*^9}, {3.9021825899316597`*^9, 3.902182600514612*^9}, {
   3.9021829258620377`*^9, 3.902183005420765*^9}, {3.902183038722582*^9, 
   3.902183046889258*^9}, {3.902183146095436*^9, 3.902183180909424*^9}, {
   3.9021832196542*^9, 3.9021832663767*^9}, 3.9021834227737217`*^9, {
   3.902184008376007*^9, 3.9021841009593287`*^9}, {3.902185056875433*^9, 
   3.902185063647262*^9}, {3.9021851127874317`*^9, 3.9021851392227507`*^9}, {
   3.902185198925695*^9, 3.902185286372054*^9}, {3.902229369959395*^9, 
   3.902229405874107*^9}, {3.9022295399357347`*^9, 3.902229555835684*^9}, {
   3.90223044228968*^9, 3.902230496834584*^9}, 3.9022305356680937`*^9, {
   3.902230822550284*^9, 3.902230823581956*^9}, {3.902230881644936*^9, 
   3.902230887764627*^9}, {3.902232471989459*^9, 3.9022324764832983`*^9}, {
   3.902232701632545*^9, 3.902232705007112*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"1683d5c4-070d-445f-a609-3eefa7cd00ee"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -1}, {1.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{0.375, -1}, {0.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
     LineBox[{{0.375, -0.0234375}, {2.625, -0.0234375}}], 
     LineBox[{{0.375, 0.0234375}, {2.625, 0.0234375}}]}, InsetBox[
     StyleBox["\<\"c\"\>",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, 0}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}, {
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
       RectangleBox[{0.625, -1.375}, {1.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      "\"H\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "H", "Tooltip"]& ], {
     TagBox[
      TooltipBox[{
        TagBox[
         TooltipBox[{
           TagBox[
            TooltipBox[
             {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
              0.7367, 0.358, 0.503], Opacity[0.3]}], 
              RectangleBox[{1.625, -1.375}, {2.375, -0.625},
               RoundingRadius->0.1]},
             "\"Measurement\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Measurement", "Tooltip"]& ], {
            {Thickness[Small], 
             LineBox[{{2.1516906864453027`, -1.0772902651951612`}, {
              2.212366961023424, -1.0332063712732258`}}], 
             LineBox[{{2.1169043378485126`, -1.0409065970372444`}, {
              2.1636660729879176`, -0.9822692358521422}}], 
             LineBox[{{2.073692193435111, -1.015088542646603}, {
              2.103169070809155, -0.9461239597052442}}], 
             LineBox[{{2.0251687373408105`, -1.0016969196685124`}, {
              2.0352362322771347`, -0.9273756875359171}}], 
             LineBox[{{1.9748312626591897`, -1.0016969196685122`}, {
              1.9647637677228655`, -0.9273756875359171}}], 
             LineBox[{{1.9263078065648893`, -1.015088542646603}, {
              1.8968309291908452`, -0.9461239597052442}}], 
             LineBox[{{1.8830956621514874`, -1.0409065970372444`}, {
              1.8363339270120824`, -0.9822692358521422}}], 
             LineBox[{{1.8483093135546973`, -1.0772902651951612`}, {
              1.7876330389765764`, -1.0332063712732258`}}]}, 
            {Thickness[Medium], 
             LineBox[{{2, -1.1875}, {
               2.17024643740233, -0.853372553429362}}]}}, 
           {Dashing[{Small, Small}]}},
          RowBox[{"\"Measurement\"", "[", "None", "]"}]],
         Annotation[#, 
          "Measurement"[None], "Tooltip"]& ], 
        {Dashing[{Small, Small}]}},
       TemplateBox[{
         RowBox[{"\"Measurement\"", "[", "None", "]"}], 
         RowBox[{"\[CircleTimes]", "1"}]}, "Superscript", SyntaxForm -> 
        SuperscriptBox]],
      Annotation[#, 
       Superscript[
        "Measurement"[None], 
        CircleTimes[1]], "Tooltip"]& ], 
     {RGBColor[0.537254, 0.537254, 0.537254], 
      LineBox[{{2., -0.625}, {2., -0.2109375}}], 
      {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
       FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
       PolygonBox[{{1.90625, -0.2109375}, {2.09375, -0.2109375}, {
        2., -0.0234375}}]}}}}, InsetBox[
    StyleBox["1",
     StripOnInput->False,
     FontSize->10,
     FontSlant->Italic,
     FontColor->RGBColor[0.537254, 0.537254, 0.537254],
     Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
    ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{3.945082410557028*^9, 3.945082598108239*^9, 
  3.9450863971764297`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"9fe26220-06c6-461d-a61c-67b358979776"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s run the above computation several times and take \
statistics of output values.\
\>", "Text",
 CellChangeTimes->{{3.902229759336257*^9, 3.9022297829364433`*^9}, {
  3.9022313615073977`*^9, 
  3.9022314061157093`*^9}},ExpressionUUID->"930c643b-8c8b-4301-81ab-\
00f0417aa746"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"runs", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputstate", "=", "ket0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Input state   \>\"", ",", 
   RowBox[{"inputstate", "[", "\"\<Formula\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qm", "=", 
   RowBox[{"QuantumMeasurementSimulation", "[", 
    RowBox[{
     RowBox[{"circuit", "[", "inputstate", "]"}], ",", 
     RowBox[{"QuantumMeasurementOperator", " ", "/@", 
      RowBox[{"{", "\"\<Z\>\"", "}"}]}], ",", "runs"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"qm", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ChartLabels", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Output Values\>\"", ",", "\"\<Counts\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Bold"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.902160669187504*^9, {3.902160755058207*^9, 3.9021608403648376`*^9}, {
   3.902160883386451*^9, 3.902160886693926*^9}, {3.902160932177886*^9, 
   3.902160963272201*^9}, {3.9021609985857887`*^9, 3.902161001455246*^9}, {
   3.902161154299004*^9, 3.902161155309304*^9}, {3.902161213958499*^9, 
   3.9021612244081287`*^9}, {3.902161706709229*^9, 3.9021617552752123`*^9}, {
   3.902161829053338*^9, 3.902161874799492*^9}, {3.9021619319637413`*^9, 
   3.902161933244416*^9}, {3.9021619635538588`*^9, 3.902161966050132*^9}, {
   3.9021620636337137`*^9, 3.902162065476829*^9}, {3.902162109262967*^9, 
   3.9021621384867697`*^9}, {3.9021622913346567`*^9, 3.902162346241014*^9}, {
   3.902162419580595*^9, 3.9021624257770967`*^9}, {3.902162476044937*^9, 
   3.90216258673118*^9}, {3.9021819778752213`*^9, 3.902181988680463*^9}, {
   3.902182333495875*^9, 3.9021823463986797`*^9}, 3.902182391711767*^9, {
   3.902182422519552*^9, 3.9021824755880213`*^9}, 3.902182515668507*^9, {
   3.902182552129517*^9, 3.902182552509975*^9}, {3.902182666517251*^9, 
   3.902182682209094*^9}, {3.90218271910001*^9, 3.902182719403943*^9}, {
   3.9021833080662518`*^9, 3.902183320509087*^9}, {3.902183383914641*^9, 
   3.902183405477783*^9}, {3.9022294993146467`*^9, 3.902229505963492*^9}, {
   3.902229579989684*^9, 3.902229613491081*^9}, {3.9022296480820208`*^9, 
   3.9022296516414957`*^9}, {3.9022297459135323`*^9, 
   3.9022297509938374`*^9}, {3.90223010190806*^9, 3.9022301506237717`*^9}, {
   3.902230329710114*^9, 3.902230352515791*^9}, {3.902231461932437*^9, 
   3.902231463549939*^9}, {3.902232805467753*^9, 3.9022328116674643`*^9}, 
   3.902233744507183*^9, {3.914893265653281*^9, 3.914893315436041*^9}, {
   3.915102147677494*^9, 3.915102153726218*^9}, {3.9151024260982437`*^9, 
   3.915102426648798*^9}, {3.915102862432349*^9, 3.915102866497629*^9}, 
   3.945012064632146*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"0c173f0a-1c52-476b-b1df-06565e650640"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Input state   \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"0"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]}],
  SequenceForm["Input state   ", 
   RawBoxes[
    RowBox[{
      RowBox[{
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"0"}]}, "Ket"], FontWeight -> "Plain"], 
         Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]}]}]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.9450824105600443`*^9, 3.9450825981113377`*^9, 
  3.94508639719876*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"3e1105fb-1684-4829-851b-2791a7483558"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6859999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 46.},
          RoundingRadius->0],
         StatusArea[#, 46]& ,
         TagBoxNote->"46"],
        StyleBox["46", {
          RGBColor[1, 0, 0], FontWeight -> Bold}, StripOnInput -> False]],
       Annotation[#, 
        Style[46, {
          RGBColor[1, 0, 0], FontWeight -> Bold}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 54.},
          RoundingRadius->0],
         StatusArea[#, 54]& ,
         TagBoxNote->"54"],
        StyleBox["54", {
          RGBColor[1, 0, 0], FontWeight -> Bold}, StripOnInput -> False]],
       Annotation[#, 
        Style[54, {
          RGBColor[1, 0, 0], FontWeight -> Bold}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{-0.8428550619082302, 0.}, {3.870688128186453, 0.}}], 
       StyleBox[
        {RGBColor[1, 0, 0], Thickness[Tiny], 
         StyleBox[InsetBox[
           TagBox["\<\"Output Values\"\>",
            HoldForm], Offset[{10., 0.}, {2.4512017479970867, 0.}], NCache[
           ImageScaled[{0, Rational[1, 2]}], ImageScaled[{0, 0.5}]], 
           Automatic, {1, 0}],
          StripOnInput->False,
          FontWeight->Bold]}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{2.4512017479970867`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {2.4512017479970867`, 
            0.}]}], {{}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {RGBColor[1, 0, 0], Thickness[Tiny], 
          
          StyleBox[{
            InsetBox["\<\"0\"\>", Offset[{0, -2}, {1., 0.}], NCache[
             ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
             Automatic, {1, 0}], 
            InsetBox["\<\"1\"\>", Offset[{0, -2}, {2., 0.}], NCache[
             ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
             Automatic, {1, 0}]},
           StripOnInput->False,
           FontWeight->Bold]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Output Values\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Counts\"", HoldForm], TraditionalForm]},
  AxesOrigin->{-0.8428550619082302, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{
    RGBColor[1, 0, 0], Bold},
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.945082410927244*^9, 3.94508259825924*^9, 
  3.945086397558812*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"6cb00039-6b41-452d-ba10-83b0bed45c8c"]
}, Open  ]],

Cell[TextData[{
 StyleBox["In the run executed above, we fed state | 0\[RightAngleBracket] \
into ",
  Background->RGBColor[0.87, 0.94, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{"\[InvisiblePrefixScriptBase]", 
    SubscriptBox["U", "1"]}], TraditionalForm]],
  Background->RGBColor[0.87, 0.94, 1],ExpressionUUID->
  "b673b59f-6450-4c94-b7cc-9185cc64ce88"],
 StyleBox[" 100 times, the graph shows that the measurement device counted \
the value \[OpenCurlyDoubleQuote]0\[CloseCurlyDoubleQuote] for roughly 1/2 of \
the runs, but gave the value \
\[OpenCurlyDoubleQuote]1\[CloseCurlyDoubleQuote], for the remaining runs.  ",
  Background->RGBColor[0.87, 0.94, 1]],
 "\n\n",
 StyleBox["Exercise: Repeat this circuit run but let |1\[RightAngleBracket] \
be the input state by replacing command \
\[OpenCurlyDoubleQuote]inputstate=ket1\[CloseCurlyDoubleQuote]  above with \
\[OpenCurlyDoubleQuote]inputstate=ket0\[CloseCurlyDoubleQuote]  \n\n",
  Background->RGBColor[1, 0.85, 0.85]],
 StyleBox["Analysis: from these statistics we could infer that \
\[OpenCurlyDoubleQuote]gate3\[CloseCurlyDoubleQuote] is either a very noisy \
NOT, or Identity gate. You could simulate such a gate yourself at home. Take \
a coin initially with the \[OpenCurlyDoubleQuote]head\[CloseCurlyDoubleQuote] \
state showing.  Flip your coin and register \nthe face of the coin when \
landed. You should get similar statistics to that obtained using \
\[OpenCurlyDoubleQuote]gate3\[CloseCurlyDoubleQuote]. \n\nBased on our \
experiments let\[CloseCurlyQuote]s call \[OpenCurlyDoubleQuote]gate3\
\[CloseCurlyDoubleQuote] a \[OpenCurlyDoubleQuote] Coin flip gate\
\[CloseCurlyDoubleQuote], as it demonstrates similar statistics. To check if \
that is the case. Perform another experiment at home, flip a coin once and \
use that output to flip the coin again. What type of statistics  do you \
observe after two consecutive flips ?  Convince yourself that you arrive at \
the same statistics as obtained in a single flip experiment.",
  Background->RGBColor[0.88, 1, 0.88]]
}], "Text",
 CellChangeTimes->{{3.945012324185644*^9, 3.945012622174615*^9}, {
  3.945012819155806*^9, 3.945013107731821*^9}, {3.9450841081957912`*^9, 
  3.945084152182769*^9}},ExpressionUUID->"4035131f-6d86-4a29-8fd5-\
4e4088d2d8a4"],

Cell["", "PageBreak",
 PageBreakBelow->True,ExpressionUUID->"2ab894c3-07f8-41a3-8c02-7ef37b67a96d"],

Cell[TextData[StyleBox["If our interpretation is correct \
let\[CloseCurlyQuote]s perform the quantum simulation shown by the circuit \
diagram below. It involves two consecutive actions of \
\[OpenCurlyDoubleQuote]gate3\[CloseCurlyDoubleQuote]. That is the output of \
the first traversal through \[OpenCurlyDoubleQuote]gate3\
\[CloseCurlyDoubleQuote] is used as input to an additional  \
\[OpenCurlyDoubleQuote]gate3\[CloseCurlyDoubleQuote].",
 FontSize->18,
 Background->RGBColor[0.87, 0.94, 1]]], "Text",
 CellChangeTimes->{{3.945013132153844*^9, 3.945013300767761*^9}, {
  3.9450140827238092`*^9, 
  3.945014134052971*^9}},ExpressionUUID->"6fedf961-a800-43b9-a3b0-\
0b357e86e060"],

Cell["", "PageBreak",
 PageBreakBelow->True,ExpressionUUID->"3fe68dab-fbf6-4e0b-8e36-e83a54c2d9e3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"circuit", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"gate3", ",", "gate3"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"circuitdiagram", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"gate3", ",", "gate3", ",", "m1"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"circuitdiagram", "[", "\"\<Diagram\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.90223403722913*^9, 3.902234045103546*^9}, {
  3.902234424662354*^9, 3.902234428520938*^9}, {3.945012740103868*^9, 
  3.945012749492772*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"d3c703f4-3c5d-4dec-8732-b0376433d6f5"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -1}, {1.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -1}, {2.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{0.375, -1}, {0.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
     LineBox[{{0.375, -0.0234375}, {3.625, -0.0234375}}], 
     LineBox[{{0.375, 0.0234375}, {3.625, 0.0234375}}]}, InsetBox[
     StyleBox["\<\"c\"\>",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, 0}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}, {
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
       RectangleBox[{0.625, -1.375}, {1.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      "\"H\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "H", "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
       RectangleBox[{1.625, -1.375}, {2.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      "\"H\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "H", "Tooltip"]& ], {
     TagBox[
      TooltipBox[{
        TagBox[
         TooltipBox[{
           TagBox[
            TooltipBox[
             {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
              0.7367, 0.358, 0.503], Opacity[0.3]}], 
              RectangleBox[{2.625, -1.375}, {3.375, -0.625},
               RoundingRadius->0.1]},
             "\"Measurement\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Measurement", "Tooltip"]& ], {
            {Thickness[Small], 
             LineBox[{{3.1516906864453027`, -1.0772902651951612`}, {
              3.212366961023424, -1.0332063712732258`}}], 
             LineBox[{{3.1169043378485126`, -1.0409065970372444`}, {
              3.1636660729879176`, -0.9822692358521422}}], 
             LineBox[{{3.073692193435111, -1.015088542646603}, {
              3.103169070809155, -0.9461239597052442}}], 
             LineBox[{{3.0251687373408105`, -1.0016969196685124`}, {
              3.0352362322771347`, -0.9273756875359171}}], 
             LineBox[{{2.9748312626591895`, -1.0016969196685122`}, {
              2.9647637677228653`, -0.9273756875359171}}], 
             LineBox[{{2.9263078065648895`, -1.015088542646603}, {
              2.896830929190845, -0.9461239597052442}}], 
             LineBox[{{2.8830956621514874`, -1.0409065970372444`}, {
              2.8363339270120824`, -0.9822692358521422}}], 
             LineBox[{{2.8483093135546973`, -1.0772902651951612`}, {
              2.787633038976576, -1.0332063712732258`}}]}, 
            {Thickness[Medium], 
             LineBox[{{3, -1.1875}, {
               3.17024643740233, -0.853372553429362}}]}}, 
           {Dashing[{Small, Small}]}},
          RowBox[{"\"Measurement\"", "[", "None", "]"}]],
         Annotation[#, 
          "Measurement"[None], "Tooltip"]& ], 
        {Dashing[{Small, Small}]}},
       TemplateBox[{
         RowBox[{"\"Measurement\"", "[", "None", "]"}], 
         RowBox[{"\[CircleTimes]", "1"}]}, "Superscript", SyntaxForm -> 
        SuperscriptBox]],
      Annotation[#, 
       Superscript[
        "Measurement"[None], 
        CircleTimes[1]], "Tooltip"]& ], 
     {RGBColor[0.537254, 0.537254, 0.537254], 
      LineBox[{{3., -0.625}, {3., -0.2109375}}], 
      {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
       FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
       PolygonBox[{{2.90625, -0.2109375}, {3.09375, -0.2109375}, {
        3., -0.0234375}}]}}}}, InsetBox[
    StyleBox["1",
     StripOnInput->False,
     FontSize->10,
     FontSlant->Italic,
     FontColor->RGBColor[0.537254, 0.537254, 0.537254],
     Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
    ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{3.945082411014278*^9, 3.9450825983412323`*^9, 
  3.945086397646983*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"b834704a-41ec-4d59-a0dc-d86a7675a887"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s run the above computation several times and take \
statistics of output values.\
\>", "Text",
 CellChangeTimes->{{3.902229759336257*^9, 3.9022297829364433`*^9}, {
  3.9022313615073977`*^9, 
  3.9022314061157093`*^9}},ExpressionUUID->"28896021-ced1-4b95-b00d-\
c21412d450eb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"runs", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputstate", "=", "ket0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Input state   \>\"", ",", 
   RowBox[{"inputstate", "[", "\"\<Formula\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qm", "=", 
   RowBox[{"QuantumMeasurementSimulation", "[", 
    RowBox[{
     RowBox[{"circuit", "[", "inputstate", "]"}], ",", 
     RowBox[{"QuantumMeasurementOperator", " ", "/@", 
      RowBox[{"{", "\"\<Z\>\"", "}"}]}], ",", "runs"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"qm", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ChartLabels", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Output Values\>\"", ",", "\"\<Counts\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Bold"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.902160669187504*^9, {3.902160755058207*^9, 3.9021608403648376`*^9}, {
   3.902160883386451*^9, 3.902160886693926*^9}, {3.902160932177886*^9, 
   3.902160963272201*^9}, {3.9021609985857887`*^9, 3.902161001455246*^9}, {
   3.902161154299004*^9, 3.902161155309304*^9}, {3.902161213958499*^9, 
   3.9021612244081287`*^9}, {3.902161706709229*^9, 3.9021617552752123`*^9}, {
   3.902161829053338*^9, 3.902161874799492*^9}, {3.9021619319637413`*^9, 
   3.902161933244416*^9}, {3.9021619635538588`*^9, 3.902161966050132*^9}, {
   3.9021620636337137`*^9, 3.902162065476829*^9}, {3.902162109262967*^9, 
   3.9021621384867697`*^9}, {3.9021622913346567`*^9, 3.902162346241014*^9}, {
   3.902162419580595*^9, 3.9021624257770967`*^9}, {3.902162476044937*^9, 
   3.90216258673118*^9}, {3.9021819778752213`*^9, 3.902181988680463*^9}, {
   3.902182333495875*^9, 3.9021823463986797`*^9}, 3.902182391711767*^9, {
   3.902182422519552*^9, 3.9021824755880213`*^9}, 3.902182515668507*^9, {
   3.902182552129517*^9, 3.902182552509975*^9}, {3.902182666517251*^9, 
   3.902182682209094*^9}, {3.90218271910001*^9, 3.902182719403943*^9}, {
   3.9021833080662518`*^9, 3.902183320509087*^9}, {3.902183383914641*^9, 
   3.902183405477783*^9}, {3.9022294993146467`*^9, 3.902229505963492*^9}, {
   3.902229579989684*^9, 3.902229613491081*^9}, {3.9022296480820208`*^9, 
   3.9022296516414957`*^9}, {3.9022297459135323`*^9, 
   3.9022297509938374`*^9}, {3.90223010190806*^9, 3.9022301506237717`*^9}, {
   3.902230329710114*^9, 3.902230352515791*^9}, {3.902231461932437*^9, 
   3.902231463549939*^9}, {3.9022327917773952`*^9, 3.902232794308956*^9}, {
   3.902233624707752*^9, 3.902233640310882*^9}, 3.902233736947652*^9, {
   3.9151023109645967`*^9, 3.915102354146365*^9}, {3.9151023997833757`*^9, 
   3.915102400439598*^9}, {3.9151034600823593`*^9, 3.9151034637625847`*^9}, {
   3.9151041540911703`*^9, 3.9151041551675863`*^9}, {3.915124455054278*^9, 
   3.9151244555150423`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"a2660364-553f-4e8f-9965-3400e1135ee1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Input state   \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"0"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]}],
  SequenceForm["Input state   ", 
   RawBoxes[
    RowBox[{
      RowBox[{
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"0"}]}, "Ket"], FontWeight -> "Plain"], 
         Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]}]}]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.945082411033475*^9, 3.9450825983440332`*^9, 
  3.9450863976512203`*^9},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"4a1db849-754f-4d7f-ae35-b79019c8030b"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6859999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 100.},
          RoundingRadius->0],
         StatusArea[#, 100]& ,
         TagBoxNote->"100"],
        StyleBox["100", {
          RGBColor[1, 0, 0], FontWeight -> Bold}, StripOnInput -> False]],
       Annotation[#, 
        Style[100, {
          RGBColor[1, 0, 0], FontWeight -> Bold}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {
          RGBColor[1, 0, 0], FontWeight -> Bold}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {
          RGBColor[1, 0, 0], FontWeight -> Bold}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{-0.8428550619082302, 0.}, {3.870688128186453, 0.}}], 
       StyleBox[
        {RGBColor[1, 0, 0], Thickness[Tiny], 
         StyleBox[InsetBox[
           TagBox["\<\"Output Values\"\>",
            HoldForm], Offset[{10., 0.}, {2.4512017479970867, 0.}], NCache[
           ImageScaled[{0, Rational[1, 2]}], ImageScaled[{0, 0.5}]], 
           Automatic, {1, 0}],
          StripOnInput->False,
          FontWeight->Bold]}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{2.4512017479970867`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {2.4512017479970867`, 
            0.}]}], {{}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {RGBColor[1, 0, 0], Thickness[Tiny], 
          
          StyleBox[{
            InsetBox["\<\"0\"\>", Offset[{0, -2}, {1., 0.}], NCache[
             ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
             Automatic, {1, 0}], 
            InsetBox["\<\"1\"\>", Offset[{0, -2}, {2., 0.}], NCache[
             ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
             Automatic, {1, 0}]},
           StripOnInput->False,
           FontWeight->Bold]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Output Values\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Counts\"", HoldForm], TraditionalForm]},
  AxesOrigin->{-0.8428550619082302, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{
    RGBColor[1, 0, 0], Bold},
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.9450824112932253`*^9, 3.9450825985116997`*^9, 
  3.945086397909788*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"72434738-d651-4141-8270-6a23d55e0b8f"]
}, Open  ]],

Cell[TextData[StyleBox["Note the counterintuitive result that with two \
quantum \[OpenCurlyDoubleQuote]coin-flip\[CloseCurlyDoubleQuote] gates the \
system returns to its initial state |0\[RightAngleBracket]. Try repeating \
this experiment starting with input state |1 \[RightAngleBracket]. Show that \
a measurement reveals the value \[OpenCurlyDoubleQuote]1\
\[CloseCurlyDoubleQuote] after transversal through the circuit. ",
 FontSize->18,
 Background->RGBColor[0.87, 0.94, 1]]], "Text",
 CellChangeTimes->{{3.9450841909436083`*^9, 3.945084203451635*^9}, {
   3.945084243755007*^9, 3.945084284794086*^9}, {3.945084452248136*^9, 
   3.945084531244114*^9}, {3.945084582113492*^9, 3.94508466531336*^9}, 
   3.945085097442606*^9},ExpressionUUID->"234c3904-66b7-4079-ad9c-\
feaa8273349e"],

Cell["", "PageBreak",
 PageBreakBelow->True,ExpressionUUID->"97d32ee9-9e5f-40d7-879d-d6f94e7f16cd"],

Cell[TextData[StyleBox["Exercise: run the circuit below. What are your \
predictions for the measurement gates as shown. How do you reconcile the \
results obtained in the previous circuit with the \
\[OpenCurlyDoubleQuote]coin-flip\[CloseCurlyDoubleQuote] analogy ?  Can you \
predict the action of \[OpenCurlyDoubleQuote]gate3\[CloseCurlyDoubleQuote] on \
states |0\[RightAngleBracket] and |1\[RightAngleBracket], that explain these \
statistics ?",
 FontSize->18,
 Background->RGBColor[1, 0.85, 0.85]]], "Text",
 CellChangeTimes->{{3.945084732647847*^9, 3.9450847599886208`*^9}, {
  3.9450848201857767`*^9, 3.9450850014889174`*^9}, {3.945085107116913*^9, 
  3.9450851191633244`*^9}},ExpressionUUID->"7359f50a-e82a-4264-aa9e-\
d9cc7be4c93e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"circuit", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"gate3", ",", "m1", ",", "gate3"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"circuitdiagram", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"gate3", ",", "m1", ",", "gate3", ",", "m1"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"circuitdiagram", "[", "\"\<Diagram\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.902234459433814*^9, 3.902234504243986*^9}, {
  3.9022345381269407`*^9, 3.902234540207079*^9}, {3.945014236407157*^9, 
  3.945014301152021*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"d56e3ede-a1cb-413c-8ff7-fb15500f5ebc"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -1}, {1.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -1}, {2.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{3.375, -1}, {3.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{0.375, -1}, {0.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{4.375, -1}, {4.625, -1}}]}}}, {
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
     LineBox[{{0.375, -0.0234375}, {4.625, -0.0234375}}], 
     LineBox[{{0.375, 0.0234375}, {4.625, 0.0234375}}]}, InsetBox[
     StyleBox["\<\"c\"\>",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, 0}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}, {
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
       RectangleBox[{0.625, -1.375}, {1.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      "\"H\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "H", "Tooltip"]& ], {
     TagBox[
      TooltipBox[{
        TagBox[
         TooltipBox[{
           TagBox[
            TooltipBox[
             {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
              0.7367, 0.358, 0.503], Opacity[0.3]}], 
              RectangleBox[{1.625, -1.375}, {2.375, -0.625},
               RoundingRadius->0.1]},
             "\"Measurement\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Measurement", "Tooltip"]& ], {
            {Thickness[Small], 
             LineBox[{{2.1516906864453027`, -1.0772902651951612`}, {
              2.212366961023424, -1.0332063712732258`}}], 
             LineBox[{{2.1169043378485126`, -1.0409065970372444`}, {
              2.1636660729879176`, -0.9822692358521422}}], 
             LineBox[{{2.073692193435111, -1.015088542646603}, {
              2.103169070809155, -0.9461239597052442}}], 
             LineBox[{{2.0251687373408105`, -1.0016969196685124`}, {
              2.0352362322771347`, -0.9273756875359171}}], 
             LineBox[{{1.9748312626591897`, -1.0016969196685122`}, {
              1.9647637677228655`, -0.9273756875359171}}], 
             LineBox[{{1.9263078065648893`, -1.015088542646603}, {
              1.8968309291908452`, -0.9461239597052442}}], 
             LineBox[{{1.8830956621514874`, -1.0409065970372444`}, {
              1.8363339270120824`, -0.9822692358521422}}], 
             LineBox[{{1.8483093135546973`, -1.0772902651951612`}, {
              1.7876330389765764`, -1.0332063712732258`}}]}, 
            {Thickness[Medium], 
             LineBox[{{2, -1.1875}, {
               2.17024643740233, -0.853372553429362}}]}}, 
           {Dashing[{Small, Small}]}},
          RowBox[{"\"Measurement\"", "[", "None", "]"}]],
         Annotation[#, 
          "Measurement"[None], "Tooltip"]& ], 
        {Dashing[{Small, Small}]}},
       TemplateBox[{
         RowBox[{"\"Measurement\"", "[", "None", "]"}], 
         RowBox[{"\[CircleTimes]", "1"}]}, "Superscript", SyntaxForm -> 
        SuperscriptBox]],
      Annotation[#, 
       Superscript[
        "Measurement"[None], 
        CircleTimes[1]], "Tooltip"]& ], 
     {RGBColor[0.537254, 0.537254, 0.537254], 
      LineBox[{{2., -0.625}, {2., -0.2109375}}], 
      {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
       FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
       PolygonBox[{{1.90625, -0.2109375}, {2.09375, -0.2109375}, {
        2., -0.0234375}}]}}}, 
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
       RectangleBox[{2.625, -1.375}, {3.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      "\"H\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "H", "Tooltip"]& ], {
     TagBox[
      TooltipBox[{
        TagBox[
         TooltipBox[{
           TagBox[
            TooltipBox[
             {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
              0.7367, 0.358, 0.503], Opacity[0.3]}], 
              RectangleBox[{3.625, -1.375}, {4.375, -0.625},
               RoundingRadius->0.1]},
             "\"Measurement\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Measurement", "Tooltip"]& ], {
            {Thickness[Small], 
             LineBox[{{4.151690686445303, -1.0772902651951612`}, {
              4.212366961023424, -1.0332063712732258`}}], 
             LineBox[{{4.116904337848513, -1.0409065970372444`}, {
              4.163666072987917, -0.9822692358521422}}], 
             LineBox[{{4.073692193435111, -1.015088542646603}, {
              4.103169070809155, -0.9461239597052442}}], 
             LineBox[{{4.0251687373408105`, -1.0016969196685124`}, {
              4.035236232277135, -0.9273756875359171}}], 
             LineBox[{{3.9748312626591895`, -1.0016969196685122`}, {
              3.9647637677228653`, -0.9273756875359171}}], 
             LineBox[{{3.9263078065648895`, -1.015088542646603}, {
              3.896830929190845, -0.9461239597052442}}], 
             LineBox[{{3.8830956621514874`, -1.0409065970372444`}, {
              3.8363339270120824`, -0.9822692358521422}}], 
             LineBox[{{3.8483093135546973`, -1.0772902651951612`}, {
              3.787633038976576, -1.0332063712732258`}}]}, 
            {Thickness[Medium], 
             LineBox[{{4, -1.1875}, {
               4.17024643740233, -0.853372553429362}}]}}, 
           {Dashing[{Small, Small}]}},
          RowBox[{"\"Measurement\"", "[", "None", "]"}]],
         Annotation[#, 
          "Measurement"[None], "Tooltip"]& ], 
        {Dashing[{Small, Small}]}},
       TemplateBox[{
         RowBox[{"\"Measurement\"", "[", "None", "]"}], 
         RowBox[{"\[CircleTimes]", "1"}]}, "Superscript", SyntaxForm -> 
        SuperscriptBox]],
      Annotation[#, 
       Superscript[
        "Measurement"[None], 
        CircleTimes[1]], "Tooltip"]& ], 
     {RGBColor[0.537254, 0.537254, 0.537254], 
      LineBox[{{4., -0.625}, {4., -0.2109375}}], 
      {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
       FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
       PolygonBox[{{3.90625, -0.2109375}, {4.09375, -0.2109375}, {
        4., -0.0234375}}]}}}}, InsetBox[
    StyleBox["1",
     StripOnInput->False,
     FontSize->10,
     FontSlant->Italic,
     FontColor->RGBColor[0.537254, 0.537254, 0.537254],
     Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
    ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{3.945082411509787*^9, 3.945082598576201*^9, 
  3.945086398130302*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"d9ac86ba-a311-4da0-b249-1c4b89f0671f"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Answer: We can reconcile the above observation that \
\[OpenCurlyDoubleQuote]gate3\[CloseCurlyDoubleQuote], which we call the \
\[OpenCurlyDoubleQuote]H\[CloseCurlyDoubleQuote] or Hadamard Gate (see Chap3 \
in text) has the following properties\n\nH |0\[RightAngleBracket] = ",
  FontSize->18,
  Background->RGBColor[0.88, 1, 0.88]],
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    SqrtBox["2"]], TraditionalForm]],
  FontSize->18,
  Background->RGBColor[0.88, 1, 0.88],ExpressionUUID->
  "1fd7a278-6322-4485-8f40-bcffeb73583f"],
 StyleBox[" (|0\[RightAngleBracket] + |1 \[RightAngleBracket])      H|1\
\[RightAngleBracket] = ",
  FontSize->18,
  Background->RGBColor[0.88, 1, 0.88]],
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    SqrtBox["2"]], TraditionalForm]],
  FontSize->18,
  Background->RGBColor[0.88, 1, 0.88],ExpressionUUID->
  "43c157c8-f250-4625-b815-11bc1fcfbba5"],
 StyleBox[" (|0\[RightAngleBracket] - |1 \[RightAngleBracket]) \n\nThat is, \
the gate acting on the state |0\[RightAngleBracket] and \
|1\[RightAngleBracket] as above, create \[OpenCurlyDoubleQuote]superposition \
states\[CloseCurlyDoubleQuote].\n",
  FontSize->18,
  Background->RGBColor[0.88, 1, 0.88]],
 Cell[BoxData[""], "Input",
  CellChangeTimes->{{3.945085896644876*^9, 3.9450859018171377`*^9}},
  FontSize->18,
  Background->RGBColor[0.88, 1, 0.88],ExpressionUUID->
  "31397498-e52a-4e5e-ab4e-0be03334e738"]
}], "Text",
 CellChangeTimes->{{3.945085715037636*^9, 3.945085893668894*^9}, {
  3.945086002103209*^9, 
  3.945086016114661*^9}},ExpressionUUID->"1de1979b-dca6-4038-a040-\
a5c8ae2e6710"]
}, Open  ]]
},
WindowSize->{1262, 955},
WindowMargins->{{Automatic, 223}, {Automatic, 23}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
ShowCellTags->True,
Magnification:>1.5 Inherited,
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"417aee63-1d64-407e-bd3f-e21c150be07a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 350, 7, 83, "Text",ExpressionUUID->"e115ea0e-167c-4426-a023-e75827db23c6"],
Cell[CellGroupData[{
Cell[933, 31, 211, 4, 144, "Title",ExpressionUUID->"06f60776-950a-48f2-9995-d0b6fee2da72"],
Cell[CellGroupData[{
Cell[1169, 39, 624, 10, 105, "Input",ExpressionUUID->"ea3280f8-f77c-4165-9907-8e0338ba9bd7"],
Cell[1796, 51, 24463, 431, 86, "Output",ExpressionUUID->"92864332-c73f-4da7-bd59-148f4714738d"]
}, Open  ]],
Cell[26274, 485, 3901, 85, 258, "Input",ExpressionUUID->"f9372026-a71b-4a1b-81ad-16d6b6e9a953"],
Cell[30178, 572, 506, 8, 118, "Text",ExpressionUUID->"9f0d4c3a-50a3-43d3-8616-42a055d45b5d"],
Cell[CellGroupData[{
Cell[30709, 584, 2785, 43, 105, "Input",ExpressionUUID->"0a335fc0-d1f6-4dbe-b612-de04d6033a18"],
Cell[33497, 629, 9102, 198, 141, "Output",ExpressionUUID->"0b166611-b3be-4000-b93d-97b899fe6832"],
Cell[42602, 829, 4620, 100, 355, "Output",ExpressionUUID->"df0d51de-2610-4714-94fe-abcb334d05af"]
}, Open  ]],
Cell[47237, 932, 2148, 43, 311, "Text",ExpressionUUID->"bef06701-5b2c-4628-9072-95f6c751d4a8"],
Cell[49388, 977, 307, 7, 50, "Text",ExpressionUUID->"072a870f-7529-4079-95a7-06b3323b3f13"],
Cell[49698, 986, 2159, 30, 44, "Input",ExpressionUUID->"5502e661-35e2-465a-a0b9-c3176314a198"],
Cell[CellGroupData[{
Cell[51882, 1020, 3465, 62, 227, "Input",ExpressionUUID->"87581d54-2a9b-490d-b23c-2f13c25b1b81"],
Cell[55350, 1084, 777, 24, 38, "Print",ExpressionUUID->"8f2b6f7b-6202-4068-bcf5-9989782d7a1c"],
Cell[56130, 1110, 4310, 111, 386, "Output",ExpressionUUID->"0cd0c8e1-19d0-437d-80cb-485929a901e1"]
}, Open  ]],
Cell[60455, 1224, 1638, 32, 280, "Text",ExpressionUUID->"86e921ae-a72f-461f-a537-1b8658ff3886"],
Cell[62096, 1258, 99, 1, 5, "PageBreak",ExpressionUUID->"cd3fe150-a5eb-4089-bcae-abd0a45b6f99",
 PageBreakBelow->True],
Cell[62198, 1261, 356, 7, 56, "Text",ExpressionUUID->"60216bca-18c4-45e5-bf21-dc4b588bb2bf"],
Cell[CellGroupData[{
Cell[62579, 1272, 2605, 41, 105, "Input",ExpressionUUID->"ac2350a8-d3b5-4b28-8210-f29a8e0e2198"],
Cell[65187, 1315, 4620, 100, 355, "Output",ExpressionUUID->"8c36c9ef-8b8c-48fa-add6-bc2fad39fdd2"]
}, Open  ]],
Cell[69822, 1418, 307, 7, 50, "Text",ExpressionUUID->"7b01a167-79d5-4268-9832-51141b0d9c9b"],
Cell[CellGroupData[{
Cell[70154, 1429, 3024, 56, 227, "Input",ExpressionUUID->"57b23023-0018-499b-8b0a-4d73195e2226"],
Cell[73181, 1487, 772, 24, 38, "Print",ExpressionUUID->"0566b971-52c9-4a64-b7ef-58478e3092c4"],
Cell[73956, 1513, 4308, 111, 386, "Output",ExpressionUUID->"e6fb61f7-0ea2-430f-9c8a-f70deff0b014"]
}, Open  ]],
Cell[78279, 1627, 1470, 30, 280, "Text",ExpressionUUID->"7096d929-4adc-43cc-aa63-66d0cc3556e4"],
Cell[79752, 1659, 226, 4, 50, "Text",ExpressionUUID->"bf7334b5-e1d4-491e-8671-16402aed04e2"],
Cell[CellGroupData[{
Cell[80003, 1667, 2605, 41, 105, "Input",ExpressionUUID->"8c8d3c32-de6d-47c7-9bfa-666c8643cde6"],
Cell[82611, 1710, 4622, 100, 355, "Output",ExpressionUUID->"055adc4b-4d32-440a-aced-67c204976a80"]
}, Open  ]],
Cell[87248, 1813, 307, 7, 50, "Text",ExpressionUUID->"81927af6-5af6-48a1-bd5c-79838714836e"],
Cell[CellGroupData[{
Cell[87580, 1824, 3023, 56, 227, "Input",ExpressionUUID->"78c4ae33-16c2-4992-9459-a6f847fd4931"],
Cell[90606, 1882, 777, 24, 38, "Print",ExpressionUUID->"71ac5e1c-57ba-4bba-9176-4ee3ba0a1194"],
Cell[91386, 1908, 4303, 111, 389, "Output",ExpressionUUID->"c131b134-ccb2-4519-bca5-30fadcab999d"]
}, Open  ]],
Cell[95704, 2022, 2124, 39, 378, "Text",ExpressionUUID->"025d97f7-37b3-4045-8e96-7609a9cf2ad9"],
Cell[97831, 2063, 99, 1, 5, "PageBreak",ExpressionUUID->"45403e72-7d00-4826-a3f4-d1aa2f35d0b9",
 PageBreakBelow->True],
Cell[97933, 2066, 308, 6, 56, "Text",ExpressionUUID->"9d1c52b8-b438-4abb-b9df-759a084b327a"],
Cell[CellGroupData[{
Cell[98266, 2076, 2603, 41, 105, "Input",ExpressionUUID->"1683d5c4-070d-445f-a609-3eefa7cd00ee"],
Cell[100872, 2119, 4585, 99, 355, "Output",ExpressionUUID->"9fe26220-06c6-461d-a61c-67b358979776"]
}, Open  ]],
Cell[105472, 2221, 307, 7, 50, "Text",ExpressionUUID->"930c643b-8c8b-4301-81ab-00f0417aa746"],
Cell[CellGroupData[{
Cell[105804, 2232, 3048, 57, 227, "Input",ExpressionUUID->"0c173f0a-1c52-476b-b1df-06565e650640"],
Cell[108855, 2291, 778, 24, 38, "Print",ExpressionUUID->"3e1105fb-1684-4829-851b-2791a7483558"],
Cell[109636, 2317, 4307, 111, 389, "Output",ExpressionUUID->"6cb00039-6b41-452d-ba10-83b0bed45c8c"]
}, Open  ]],
Cell[113958, 2431, 2278, 40, 476, "Text",ExpressionUUID->"4035131f-6d86-4a29-8fd5-4e4088d2d8a4"],
Cell[116239, 2473, 99, 1, 5, "PageBreak",ExpressionUUID->"2ab894c3-07f8-41a3-8c02-7ef37b67a96d",
 PageBreakBelow->True],
Cell[116341, 2476, 685, 12, 133, "Text",ExpressionUUID->"6fedf961-a800-43b9-a3b0-0b357e86e060"],
Cell[117029, 2490, 99, 1, 5, "PageBreak",ExpressionUUID->"3fe68dab-fbf6-4e0b-8e36-e83a54c2d9e3",
 PageBreakBelow->True],
Cell[CellGroupData[{
Cell[117153, 2495, 715, 17, 105, "Input",ExpressionUUID->"d3c703f4-3c5d-4dec-8732-b0376433d6f5"],
Cell[117871, 2514, 5363, 118, 263, "Output",ExpressionUUID->"b834704a-41ec-4d59-a0dc-d86a7675a887"]
}, Open  ]],
Cell[123249, 2635, 307, 7, 50, "Text",ExpressionUUID->"28896021-ced1-4b95-b00d-c21412d450eb"],
Cell[CellGroupData[{
Cell[123581, 2646, 3134, 58, 227, "Input",ExpressionUUID->"a2660364-553f-4e8f-9965-3400e1135ee1"],
Cell[126718, 2706, 779, 24, 38, "Print",ExpressionUUID->"4a1db849-754f-4d7f-ae35-b79019c8030b"],
Cell[127500, 2732, 4312, 111, 386, "Output",ExpressionUUID->"72434738-d651-4141-8270-6a23d55e0b8f"]
}, Open  ]],
Cell[131827, 2846, 788, 12, 133, "Text",ExpressionUUID->"234c3904-66b7-4079-ad9c-feaa8273349e"],
Cell[132618, 2860, 99, 1, 5, "PageBreak",ExpressionUUID->"97d32ee9-9e5f-40d7-879d-d6f94e7f16cd",
 PageBreakBelow->True],
Cell[132720, 2863, 743, 12, 133, "Text",ExpressionUUID->"7359f50a-e82a-4264-aa9e-d9cc7be4c93e"],
Cell[CellGroupData[{
Cell[133488, 2879, 740, 17, 105, "Input",ExpressionUUID->"d56e3ede-a1cb-413c-8ff7-fb15500f5ebc"],
Cell[134231, 2898, 8016, 173, 213, "Output",ExpressionUUID->"d9ac86ba-a311-4da0-b249-1c4b89f0671f"]
}, Open  ]],
Cell[142262, 3074, 1617, 40, 294, "Text",ExpressionUUID->"1de1979b-dca6-4038-a040-a5c8ae2e6710"]
}, Open  ]]
}
]
*)

